@{
    ViewData["Title"] = "ƒê·ªïi m·∫≠t kh·∫©u";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="~/css/iziToast.css">
<script src="~/js/eye.js"></script>

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/">Trang Ch·ªß</a></li>
        <li class="breadcrumb-item">
            <a href='@Url.Action("Edit", "Account", new { id = @Context.Session.GetInt32("UserId") })'>
                Ch·ªânh S·ª≠a Th√¥ng Tin T√†i Kho·∫£n <span id="username"></span>
            </a>
        </li>
        <li class="breadcrumb-item active" aria-current="page">ƒê·ªïi m·∫≠t kh·∫©u</li>
    </ol>
</nav>

<div class="container">
    <h2>ƒê·ªïi m·∫≠t kh·∫©u</h2>

    <form id="changePasswordForm" asp-action="ChangePassword" method="post">
        <div>
            <label for="OldPassword">M·∫≠t kh·∫©u c≈©</label>
            <div class="input-group">
                <input type="password" id="OldPassword" name="currentPassword" required class="form-control" />
                <button type="button" class="btn btn-outline-secondary toggle-password" data-target="OldPassword">
                    <i class="fa-regular fa-eye"></i>
                </button>
            </div>
        </div>

        <div>
            <label for="NewPassword">M·∫≠t kh·∫©u m·ªõi</label>
            <div class="input-group">
                <input type="password" id="NewPassword" name="newPassword" required class="form-control" />
                <button type="button" class="btn btn-outline-secondary toggle-password" data-target="NewPassword">
                    <i class="fa-regular fa-eye"></i>
                </button>
            </div>
        </div>

        <div>
            <label for="ConfirmPassword">X√°c nh·∫≠n m·∫≠t kh·∫©u m·ªõi</label>
            <div class="input-group">
                <input type="password" id="ConfirmPassword" name="confirmPassword" required class="form-control" />
                <button type="button" class="btn btn-outline-secondary toggle-password" data-target="ConfirmPassword">
                    <i class="fa-regular fa-eye"></i>
                </button>
            </div>
        </div>

        <button type="submit">ƒê·ªïi m·∫≠t kh·∫©u</button>
    </form>
</div>

@section Scripts {
    <!-- Th√™m iziToast -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/izitoast/1.4.0/css/iziToast.min.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/izitoast/1.4.0/js/iziToast.min.js"></script>

    <script>
        document.getElementById("changePasswordForm").addEventListener("submit", function (event) {
            event.preventDefault(); // NgƒÉn ch·∫∑n reload trang

            var formData = new FormData(this);

            iziToast.question({
                timeout: 20000,
                close: false,
                overlay: true,
                displayMode: 'once',
                id: 'question',
                zindex: 999,
                title: 'üîî X√°c nh·∫≠n ƒë·ªïi m·∫≠t kh·∫©u',
                message: 'B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën thay ƒë·ªïi m·∫≠t kh·∫©u kh√¥ng?',
                position: 'center',
                class: 'iziToast-custom', /* √Åp d·ª•ng CSS t√πy ch·ªânh */
                buttons: [
                    ['<button><i class="fa fa-check"></i>ƒê·ªìng √Ω</button>', function (instance, toast) {
                        instance.hide({ transitionOut: 'fadeOut' }, toast, 'button');

                        fetch('@Url.Action("ChangePassword", "Account")', {
                            method: "POST",
                            body: formData
                        })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    iziToast.success({
                                        title: 'Th√†nh c√¥ng!',
                                        message: 'M·∫≠t kh·∫©u c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c thay ƒë·ªïi.',
                                        position: 'topRight',
                                    });

                                    setTimeout(() => {
                                        window.location.href = '@Url.Action("Index", "Home")';
                                    }, 1000);
                                } else {
                                    iziToast.error({
                                        title: 'L·ªói!',
                                        message: data.message || 'ƒê·ªïi m·∫≠t kh·∫©u kh√¥ng th√†nh c√¥ng!',
                                        position: 'topRight',
                                        timeout: 1500
                                    });
                                }
                            })
                            .catch(error => {
                                iziToast.error({
                                    title: 'L·ªói h·ªá th·ªëng!',
                                    message: 'Vui l√≤ng th·ª≠ l·∫°i sau.',
                                    position: 'topRight',
                                    color: 'red'
                                });
                            });

                    }, true],

                    ['<button><i class="fa fa-times"></i> H·ªßy</button>', function (instance, toast) {
                        instance.hide({ transitionOut: 'fadeOut' }, toast, 'button');
                        iziToast.info({
                            title: 'H·ªßy b·ªè',
                            message: 'B·∫°n ƒë√£ h·ªßy ƒë·ªïi m·∫≠t kh·∫©u.',
                            position: 'topRight'
                        });
                    }]
                ]
            });

        });

        $(document).ready(function () {
            $.get("/Account/GetUserName", function (data) {
                if (data.success) {
                    $("#username").text(data.userName);
                } else {
                    $("#username").text("Kh√¥ng x√°c ƒë·ªãnh");
                }
            });
        });
    </script>
}

<style>
    .container {
        font-family: Arial, sans-serif;
    }

    h2 {
        margin-top: 30px;
        text-align: center;
        color: #333;
    }

    form {
        width: 400px;
        margin: 0 auto;
        padding: 20px;
        border: 1px solid #ccc;
        border-radius: 5px;
        background: #f9f9f9;
        display: flex;
        flex-direction: column;
        margin-top: 30px;
        margin-bottom: 30px;
    }

    form div {
        margin-bottom: 15px;
    }

    label {
        font-weight: bold;
        margin-bottom: 5px;
        display: block;
        color: #555;
    }

    input {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        font-size: 16px;
    }

    button {
        padding: 10px;
        background: #007bff;
        color: white;
        border: none;
        font-size: 16px;
        border-radius: 5px;
        cursor: pointer;
        transition: background 0.3s ease;
    }

    button:hover {
        background: #0056b3;
    }
</style>
