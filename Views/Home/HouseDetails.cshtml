@model KLTN.Models.House

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    int userRole = ViewBag.UserRole;
}

<head>
    <title>Chi Tiết Nhà</title>
    <link rel="stylesheet" href="~/css/Detail/Detail.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/review.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/index.css" asp-append-version="true" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">

    <!-- Leaflet CSS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
</head>

<div class="detail-container">
    <h1 class="section-title">Thông Tin Chi Tiết</h1>
    <div class="detail-content">
        <div class="image-section">
            @foreach (var detail in Model.HouseDetails)
            {
                <img src="@detail.Image" alt="Hình ảnh" class="detail-image" />
            }
        </div>

        <div class="house-info">
            <p><strong>Tên nhà:</strong> @Model.NameHouse</p>
            <p><strong>Loại nhà trọ:</strong> @Model.HouseType.Name</p>

            @foreach (var detail in Model.HouseDetails)
            {
                <table class="table table-bordered">
                    <tbody>
                        <tr>
                            <td><i class="fa fa-map-marker" style="color: #007bff;"></i><strong>Địa chỉ</strong></td>
                            <td>@detail.Address</td>
                            <td><i class="fa fa-money-bill" style="color: #28a745;"></i><strong>Giá tiền</strong></td>
                            <td>@detail.Price.ToString("#,0", new System.Globalization.CultureInfo("vi-VN")) VND</td>
                        </tr>
                        <tr>
                            <td><i class="fa fa-user" style="color: #007bff;"></i><strong>Người liên hệ 1</strong></td>
                            <td>@Model.IdUserNavigation?.UserName</td>
                            <td><i class="fa fa-phone" style="color: #17a2b8;"></i> <strong>Số điện thoại</strong></td>
                            <td colspan="3">@Model.IdUserNavigation?.PhoneNumber</td>
                        </tr>
                        <tr>
                            <td><i class="fa fa-user" style="color: #007bff;"></i><strong>Người liên hệ 2</strong></td>
                            <td>@detail.ContactName2</td>
                            <td><i class="fa fa-phone" style="color: #17a2b8;"></i> <strong>Số điện thoại 2</strong></td>
                            <td colspan="3">@detail.ContactPhone2</td>
                        </tr>
                        <tr>
                            <td> <i class="fa fa-expand" style="color: #6c757d;"></i><strong>Diện tích</strong></td>
                            <td>@detail.DienTich m²</td>
                            <td><i class="fa fa-bolt" style="color: #ffc107;"></i><strong> Tiền điện</strong></td>
                            <td>@detail.TienDien VND</td>
                        </tr>
                        <tr>
                            <td><i class="fa fa-tint" style="color: #17a2b8;"></i> <strong>Tiền nước</strong></td>
                            <td>@detail.TienNuoc VND</td>
                            <td><i class="fa fa-cogs" style="color: #dc3545;"></i><strong>Tiền dịch vụ</strong></td>
                            <td>@detail.TienDv VND</td>
                        </tr>

                        <tr>
                            <td> <i class="fa fa-check-circle" style="color: #28a745;"></i><strong>Trạng thái</strong></td>
                            <td>
                                @if (detail.Status == "Chưa cho thuê")
                                {
                                    <span class="status-not-rented">Còn phòng</span>
                                }
                                else if (detail.Status == "Đã cho thuê")
                                {
                                    <span class="status-rented">Đã cho thuê</span>
                                }
                            </td>
                            <td> <i class="fa fa-calendar" style="color: #007bff;"></i><strong>Ngày đăng</strong></td>
                            <td>@detail.TimePost.ToString("dd/MM/yyyy")</td>
                        </tr>
                        <tr>
                            <td> <i class="fa fa-info-circle" style="color: #343a40;"></i> <strong>Mô tả</strong></td>
                            <td colspan="3">@detail.Describe</td>
                        </tr>
                    </tbody>
                </table>
            }
        </div>
    </div>

    @if (userRole == 2)
    {
        <div class="appointment-section">
            <button id="bookAppointmentBtn" class="btn btn-primary">Đặt lịch hẹn</button>
        </div>

        <!-- Form đặt lịch hẹn (popup) -->
        <div id="appointmentOverlay" class="appointment-overlay"></div>
        <div id="appointmentForm" class="appointment-form">
            <h3>Đặt Lịch Hẹn Xem Nhà</h3>
            <label for="appointmentDate">Chọn ngày:</label>
            <input type="date" id="appointmentDate" required>
            <div class="appointment-buttons">
                <button id="submitAppointment" class="btn btn-success">Xác nhận</button>
                <button id="closeForm" class="btn btn-secondary">Hủy</button>
            </div>
        </div>
    }

    <h3 class="section-title">Tiện Ích</h3>
    <ul class="amenities-list">
        @foreach (var amenity in Model.IdAmenities)
        {
            <li class="amenity-item">@amenity.Name</li>
        }
    </ul>

    <!-- Bản đồ -->
    <h3 class="section-title">Bản Đồ Vị Trí</h3>

    <div id="map" style="width: 100%; height: 500px; position: relative;">
        <div id="directions-icon" onclick="getDirections()">
            <img src="https://cdn-icons-png.freepik.com/256/10001/10001620.png?ga=GA1.1.353268222.1720874636&semt=ais_hybrid"
                alt="Chỉ dẫn đường" />
        </div>
        <div id="locate-icon" onclick="locateUser()">
            <img src="https://cdn-icons-png.freepik.com/256/16244/16244240.png?ga=GA1.1.353268222.1720874636&semt=ais_hybrid"
                alt="Locate Me" />
        </div>
    </div>

    <h3 class="section-title">Đánh giá:</h3>
    <div class="review-section">
        @if (Model.Reviews != null && Model.Reviews.Any())
        {
            <ul class="review-list">
                @foreach (var review in Model.Reviews)
                {
                    <li class="review-item">
                        <strong>@review.IdUserNavigation.UserName</strong>: @review.Content.ToString()
                        <span>(Rating: @review.Rating ★) </span>
                        <p>Ngày đánh giá: @review.ReviewDate?.ToString("dd/MM/yyyy")</p>
                    </li>
                }
            </ul>
        }
        else
        {
            <p>Chưa có đánh giá nào.</p>
        }
    </div>

    <div class="review-form" data-house-id="@Model?.IdHouse">
        <label for="Rating">Đánh giá:</label>
        <div class="star-rating">
            <input type="radio" name="rating" id="star5" value="5"><label for="star5" title="5 sao"></label>
            <input type="radio" name="rating" id="star4" value="4"><label for="star4" title="4 sao"></label>
            <input type="radio" name="rating" id="star3" value="3"><label for="star3" title="3 sao"></label>
            <input type="radio" name="rating" id="star2" value="2"><label for="star2" title="2 sao"></label>
            <input type="radio" name="rating" id="star1" value="1"><label for="star1" title="1 sao"></label>
        </div>

        <label for="Content">Nội dung đánh giá:</label>
        <textarea id="Content" maxlength="500" required></textarea>

        <p id="reviewMessage" style="display: none;"></p>
        <button type="button" onclick="submitReview()">Gửi đánh giá</button>
    </div>

</div>


<!-- Leaflet JS -->
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
<script>
    var map = L.map('map').setView([21.028511, 105.804817], 13); // Mặc định là Hà Nội
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        maxZoom: 19,
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);

    var marker = L.marker([21.028511, 105.804817]).addTo(map); // Đặt marker mặc định tại Hà Nội

    // Lấy địa chỉ từ Model (cần kiểm tra xem có giá trị không)
    var addressFromModel = "@Model.HouseDetails.FirstOrDefault()?.Address";
    var decodedAddress = new DOMParser().parseFromString(addressFromModel, "text/html").body.textContent;

    console.log("Decoded Address: ", decodedAddress);

    async function setInitialAddress() {
        if (decodedAddress) {
            const response = await fetch(`https://nominatim.openstreetmap.org/search?q=${encodeURIComponent(decodedAddress)}&format=json`);
            const data = await response.json();

            if (data.length > 0) {
                const { lat, lon, display_name } = data[0];
                map.setView([lat, lon], 15);
                marker.setLatLng([lat, lon]).bindPopup(`<strong>Địa chỉ:</strong> ${display_name}`).openPopup();
            }
        }
    }

    // Gọi hàm để hiển thị vị trí khi trang tải
    setInitialAddress();

    // Hàm giải mã HTML entities
    function decodeHtmlEntities(input) {
        var doc = new DOMParser().parseFromString(input, 'text/html');
        return doc.documentElement.textContent;
    }

    async function getDirections() {
        var decodedAddress = "@Model.HouseDetails.FirstOrDefault()?.Address";

        // Giải mã HTML entities
        var address = decodeHtmlEntities(decodedAddress);

        console.log("Decoded Address: ", address);  // Kiểm tra địa chỉ sau khi giải mã

        if (!address) {
            alert("Địa chỉ không hợp lệ.");
            return;
        }

        // Mã hóa địa chỉ cho Google Maps
        var googleMapsUrl = `https://www.google.com/maps/dir/?api=1&destination=${encodeURIComponent(address)}`;
        window.open(googleMapsUrl, '_blank');
    }

    async function submitReview() {
        const rating = document.querySelector('input[name="rating"]:checked');
        const content = document.getElementById('Content').value;
        const reviewMessage = document.getElementById('reviewMessage');

        if (!rating || !content) {
            reviewMessage.innerText = "Vui lòng nhập đầy đủ thông tin.";
            reviewMessage.style.display = "block";
            return;
        }
        const houseId = document.querySelector('.review-form').getAttribute('data-house-id');
        if (!houseId) {
            reviewMessage.innerText = "Không tìm thấy IdHouse. Vui lòng thử lại.";
            reviewMessage.style.display = "block";
            return;
        }
        const reviewData = {
            Rating: parseInt(rating.value),
            Content: content
        };

        console.log("houseId:", houseId);
        console.log("Review Data:", reviewData);

        try {
            const response = await fetch(`/api/Detail/house/detail/${houseId}/addreview`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(reviewData)
            });

            if (!response.ok) {
                const errorDetail = await response.json();
                console.error("Error Detail:", errorDetail);

                reviewMessage.innerText = errorDetail.message || "Đã xảy ra lỗi.";
                if (errorDetail.errors) {
                    reviewMessage.innerHTML += "<br>" + errorDetail.errors.join("<br>");
                }
                reviewMessage.style.display = "block";
                return;
            }
            const result = await response.json();
            alert(result.message);
            location.reload();
        } catch (error) {
            console.error("Unexpected Error:", error);
            reviewMessage.innerText = "Đã xảy ra lỗi không xác định. Vui lòng thử lại.";
            reviewMessage.style.display = "block";
        }
    }

    async function locateUser() {
        var addressFromModel = "@Model.HouseDetails.FirstOrDefault()?.Address"; // Địa chỉ từ Model
        var decodedAddress = new DOMParser().parseFromString(addressFromModel, "text/html").body.textContent; // Giải mã HTML entities

        console.log("Decoded Address: ", decodedAddress); // Kiểm tra giá trị của địa chỉ

        if (!decodedAddress) {
            alert("Địa chỉ không hợp lệ.");
            return;
        }

        // Sử dụng OpenStreetMap Nominatim API để tìm tọa độ từ địa chỉ
        const response = await fetch(`https://nominatim.openstreetmap.org/search?q=${encodeURIComponent(decodedAddress)}&format=json`);
        const data = await response.json();

        if (data.length > 0) {
            const { lat, lon, display_name } = data[0];
            map.setView([lat, lon], 15); // Di chuyển bản đồ đến vị trí mới
            marker.setLatLng([lat, lon]) // Cập nhật vị trí marker
                .bindPopup(`<strong>Địa chỉ:</strong> ${display_name}`).openPopup(); // Hiển thị thông tin địa chỉ
        } else {
            alert("Không tìm thấy vị trí cho địa chỉ này.");
        }
    }

</script>
<script>
    document.getElementById('bookAppointmentBtn').addEventListener('click', function () {
        document.getElementById('appointmentForm').style.display = 'block';
    });

    document.getElementById('closeForm').addEventListener('click', function () {
        document.getElementById('appointmentForm').style.display = 'none';
    });

    document.addEventListener('click', function (event) {
        const form = document.getElementById('appointmentForm');
        if (form.style.display === 'block' && !form.contains(event.target) && event.target.id !== 'bookAppointmentBtn') {
            form.style.display = 'none';
        }
    });
    document.getElementById('submitAppointment').addEventListener('click', async function () {
        const date = document.getElementById('appointmentDate').value;
        const houseId = "@Model.IdHouse";

        if (!date) {
            alert("Vui lòng chọn ngày!");
            return;
        }

        const appointmentData = {
            HouseId: houseId,
            AppointmentDate: date
        };

        try {
            const response = await fetch('/Appointment/Create', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(appointmentData)
            });

            const result = await response.json();
            alert(result.message);
            if (result.success) {
                document.getElementById('appointmentForm').style.display = 'none';
            }
        } catch (error) {
            alert("Có lỗi xảy ra! Vui lòng thử lại.");
        }
    });
</script>
