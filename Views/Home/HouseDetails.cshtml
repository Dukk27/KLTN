@model KLTN.Models.House

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    int userRole = ViewBag.UserRole;

    var amenityIcons = new Dictionary<string, string>
    {
        { "Điều hòa", "fas fa-snowflake" },
        { "Nóng lạnh", "fas fa-temperature-high" },
        { "Giường", "fas fa-bed" },
        { "Tủ đồ", "fas fa-person-booth" },
        { "Máy giặt", "fas fa-sync-alt" },
        { "Bàn bếp", "fas fa-utensils" },
        { "Thiết bị vệ sinh", "fas fa-toilet" },
        { "Thang máy", "fas fa-arrow-up" },
        { "Chỗ để xe", "fas fa-parking" },
        { "Wifi", "fas fa-wifi" },
        { "Sân phơi", "fas fa-tshirt" },
        { "Vệ sinh chung", "fas fa-restroom" },
        { "Ban công", "fas fa-building" },
        { "Cửa sổ", "fas fa-window-maximize" },
        { "Gác", "fas fa-layer-group" },
        { "Tầng thượng", "fas fa-building" },
        { "PCCC", "fas fa-fire-extinguisher" },
        { "Camera an ninh", "fas fa-video" },
        { "Khoá vân tay", "fas fa-fingerprint" },
        { "Không chung chủ", "fas fa-user-slash" },
        { "Giờ giấc tự do", "fas fa-clock" },
        { "Vệ sinh khép kín", "fas fa-shower" }
    };
}

@if (TempData["SuccessMessage"] != null)
{
    <script src="https://cdn.jsdelivr.net/npm/izitoast/dist/js/iziToast.min.js"></script>
    <script>
        iziToast.success({
            title: 'Thành công!',
            message: '@TempData["SuccessMessage"]',
            position: 'topRight',
            timeout: 2000,
        });
    </script>
}

@if (TempData["ErrorMessage"] != null)
{
    <script src="https://cdn.jsdelivr.net/npm/izitoast/dist/js/iziToast.min.js"></script>
    <script>
        iziToast.error({
            title: 'Lỗi!',
            message: '@TempData["ErrorMessage"]',
            position: 'topRight',
            timeout: 2000,
        });
    </script>
}

<head>
    <title>Chi Tiết Nhà</title>
    <link rel="stylesheet" href="~/css/Detail/Detail.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/index.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.3.0/css/all.min.css" />
    <link rel="stylesheet" href="~/css/goong-js.css" asp-append-version="true" />
    <input type="hidden" id="Latitude" name="Lat" />
    <input type="hidden" id="Longitude" name="Lng" />
</head> 

<body>
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                @if (ViewBag.UserRole == 0) 
                {
                    <a href="@Url.Action("Index", "Admin")">Trang Chủ Admin</a>
                }
                else
                {
                    <a href="@Url.Action("Index", "Home")">Trang Chủ</a>
                }
            </li>
            <li class="breadcrumb-item active" aria-current="page">Thông Tin Chi Tiết Bài Đăng Nhà Trọ "@Model.NameHouse"
            </li>
        </ol>
    </nav>

    <div class="detail-container">
        <h1>@Model.NameHouse</h1>

        <label class="section-title">Thông Tin Chi Tiết</label>
        <div class="section-underline"></div>
        <div class="detail-content">
            <div id="houseImageCarousel" class="carousel slide" data-bs-interval="false">
                <div class="carousel-indicators">
                    @{
                        int i = 0;
                        foreach (var detail in Model.HouseDetails)
                        {
                            foreach (var image in detail.Image.Split(',', StringSplitOptions.RemoveEmptyEntries))
                            {
                                <button type="button" data-bs-target="#houseImageCarousel" data-bs-slide-to="@i"
                                        class="@(i == 0 ? "active" : "")" aria-current="@(i == 0 ? "true" : null)"
                                        aria-label="Slide @(i + 1)"></button>;
                                i++;
                            }
                        }
                    }
                </div>

                <div class="carousel-inner">
                    @{
                        int index = 0;
                        foreach (var detail in Model.HouseDetails)
                        {
                            foreach (var image in detail.Image.Split(',', StringSplitOptions.RemoveEmptyEntries))
                            {
                                <div class="carousel-item @(index == 0 ? "active" : "")">
                                    <img src="@image" class="d-block w-100 preview-image" alt="Hình ảnh nhà"
                                        onclick="openFullSizeImage(this)">
                                </div>
                                index++;
                            }
                        } 
                    }
                </div>
                <!-- Nút điều hướng -->
                <button class="carousel-control-prev" type="button" data-bs-target="#houseImageCarousel"
                    data-bs-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Previous</span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#houseImageCarousel"
                    data-bs-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Next</span>
                </button>
            </div>

            <div class="house-info">
                @foreach (var detail in Model.HouseDetails)
                {
                    <div class="address-box mb-3">
                        <p style="font-size: 18px;">
                            <strong>Địa chỉ:</strong>
                            <span>@detail.Address</span>
                        </p>
                    </div>

                    <table class="table table-bordered">
                        <tbody>
                            <tr>
                                <td><i class="fas fa-home" style="color: #6f42c1;"></i><strong>Loại nhà trọ</strong></td>
                                <td>@Model.HouseType?.Name</td>
                                <td><i class="fas fa-money-bill" style="color: #28a745;"></i><strong>Giá tiền</strong></td>
                                <td>@detail.Price.ToString("#,0", new System.Globalization.CultureInfo("vi-VN")) VND/Tháng</td>
                            </tr>
                            <tr>
                                <td><i class="fas fa-user" style="color: #007bff;"></i><strong>Người liên hệ 1</strong></td>
                                <td>@Model.IdUserNavigation?.UserName</td>
                                <td><i class="fas fa-phone" style="color: #17a2b8;"></i> <strong>Số điện thoại</strong></td>
                                <td colspan="3">@Model.IdUserNavigation?.PhoneNumber</td>
                            </tr>
                            <tr>
                                <td><i class="fas fa-user" style="color: #007bff;"></i><strong>Người liên hệ 2</strong></td>
                                <td>@detail.ContactName2</td>
                                <td><i class="fas fa-phone" style="color: #17a2b8;"></i> <strong>Số điện thoại 2</strong></td>
                                <td colspan="3">@detail.ContactPhone2</td>
                            </tr>
                            <tr>
                                <td> <i class="fas fa-ruler-combined" style="color: #6c757d;"></i><strong>Diện tích</strong>
                                </td>
                                <td>@detail.DienTich m²</td>
                                <td><i class="fas fa-bolt" style="color: #ffc107;"></i><strong> Tiền điện</strong></td>
                                <td>@detail.TienDien </td>
                            </tr>
                            <tr>
                                <td><i class="fas fa-tint" style="color: #17a2b8;"></i> <strong>Tiền nước</strong></td>
                                <td>@detail.TienNuoc </td>
                                <td><i class="fas fa-coins" style="color: #dc3545;"></i><strong>Tiền dịch vụ</strong></td>
                                <td>@detail.TienDv VND/Tháng</td>
                            </tr>

                            <tr>
                                <td> <i class="fas fa-check-circle" style="color: #28a745;"></i><strong>Trạng thái</strong></td>
                                <td>
                                    @if (detail.Status == "Chưa cho thuê")
                                    {
                                        <span class="status-not-rented">Còn phòng</span>
                                    }
                                    else if (detail.Status == "Đã cho thuê")
                                    {
                                        <span class="status-rented">Đã cho thuê</span>
                                    }
                                </td>
                                <td> <i class="fas fa-calendar" style="color: #007bff;"></i><strong>Ngày đăng</strong></td>
                                <td>@detail.TimePost.ToString("dd/MM/yyyy")</td>
                            </tr>
                            <tr>
                                <td> <i class="fas fa-info-circle" style="color: #343a40;"></i> <strong>Mô tả</strong></td>
                                <td colspan="3">@detail.Describe</td>
                            </tr>
                        </tbody>
                    </table>
                }
            </div>
        </div>

        <!--Chat và Đặt hẹn-->
        <div class="action-buttons">
            @if (ViewBag.OwnerId != ViewBag.CurrentUserId && ViewBag.IsOwnerLocked == false)
            {
                <a href="javascript:void(0);" onclick="handleChatClick()" class="btn btn-search">
                    <i class="fas fa-comment"></i> Nhắn Tin với Chủ Trọ
                </a>
                <button id="bookAppointmentBtn" class="btn btn-search"><i class="fas fa-calendar"></i> Đặt lịch hẹn</button>
            }
            else if (ViewBag.OwnerId != ViewBag.CurrentUserId && ViewBag.IsOwnerLocked == true)
            {
                <p class="text-danger mt-2">🔒 Chủ trọ hiện đang bị khóa tài khoản, không thể nhắn tin hoặc đặt lịch hẹn.</p>
            }

            <!-- Form đặt lịch hẹn (popup) -->
            <div id="appointmentOverlay" class="appointment-overlay"></div>
            <div id="appointmentForm" class="appointment-form">
                <h3>Đặt Lịch Hẹn Xem Nhà</h3>
                <label for="appointmentDate">Chọn ngày:</label>
                <input type="datetime-local" id="appointmentDateTime" required>
                <div class="appointment-buttons">
                    <button id="submitAppointment" class="btn btn-success">Xác nhận</button>
                    <button id="closeForm" class="btn btn-secondary">Hủy</button>
                </div>
            </div>
            <input type="hidden" id="isAuthenticated" value="@User.Identity.IsAuthenticated.ToString().ToLower()" />
            <input type="hidden" id="userRole" value="@ViewBag.UserRole" />
            <input type="hidden" id="houseOwnerId" value="@Model.IdUserNavigation.IdUser" />
            <input type="hidden" id="currentUserId" value="@ViewBag.currentUserId" />
        </div>

        <label class="section-title">Tiện Ích</label>
        <div class="section-underline"></div>
        <div class="row amenities-wrapper">
            @foreach (var amenity in Model.IdAmenities)
            {
                var iconClass = amenityIcons.ContainsKey(amenity.Name) ? amenityIcons[amenity.Name] : "fas fa-wind";

                <div class="col-md-3 col-sm-6 col-12 mb-3">
                    <div class="amenity-item">
                        <i class="@iconClass" style="margin-right: 5px; margin-bottom: 20px"></i> @amenity.Name
                    </div>
                </div>
            }
        </div>

        <input type="hidden" id="house-address" data-address="@Model.HouseDetails.FirstOrDefault()?.Address" />

        <!-- Bản đồ -->
        <label class="section-title">Bản Đồ Vị Trí</label>
        <div class="section-underline"></div>

        <div id="map" style="width: 100%; height: 500px; position: relative;">
            <div class="map-style-button" onclick="toggleMapStyleMenu()">Map Styles</div>

            <div class="map-style-menu">
                <button onclick="changeMapStyle('light')">Light</button>
                <button onclick="changeMapStyle('dark')">Dark</button>
                <button onclick="changeMapStyle('navigation-day')">Navigation Day</button>
                <button onclick="changeMapStyle('navigation-night')">Navigation Night</button>
                <button onclick="changeMapStyle('default')">Default</button>
            </div>
 
            <div id="directions-icon" class="map-icon" onclick="getDirections()">
                <i class="fa fa-directions"></i>
                <span class="icon-text">Get Directions</span>
            </div>
            <div id="locate-icon" class="map-icon" onclick="locateUser()">
                <i class="fa fa-location-arrow"></i>
                <span class="icon-text">Locate Me</span>
            </div>

        </div>

        <label class="section-title">Đánh giá</label>
        <div class="section-underline"></div>

        <div class="review-section">
            @if (Model.Reviews != null && Model.Reviews.Any())
            {
                <ul class="review-list">
                @foreach (var review in Model.Reviews.Where(r => !r.IdUserNavigation.IsLocked))
                    { 
                        <li class="review-item">
                            <!-- Tên người đánh giá, Ngày đánh giá và Rating (Số sao) cùng nằm trên 1 hàng -->
                            <div class="review-header">
                                <strong>@review.IdUserNavigation.UserName</strong>
                                <span class="review-date">@review.ReviewDate?.ToString("dd/MM/yyyy HH:mm")</span>
                                <span class="review-rating">Rating: @review.Rating ★</span>
                            </div>
                            
                            <!-- Nội dung comment nằm dưới tên, ngày đánh giá và rating -->
                            <p class="review-content">@review.Content</p>
                        </li>
                    }
                </ul>
            }
            else
            {
                <p style="font-size: 20px; text-align: center">Chưa có đánh giá nào.</p>
            }
        </div>

        @if (ViewBag.OwnerId != ViewBag.CurrentUserId)
        {
            <div class="review-form" data-house-id="@Model?.IdHouse">
                <div class="review-input-wrapper">
                    <textarea id="Content" maxlength="500" required placeholder="Viết đánh giá của bạn tại đây..." style="font-size:16px"></textarea>

                    <div class="star-rating">
                        <i class="fa fa-star" data-value="1"></i>
                        <i class="fa fa-star" data-value="2"></i>
                        <i class="fa fa-star" data-value="3"></i>
                        <i class="fa fa-star" data-value="4"></i>
                        <i class="fa fa-star" data-value="5"></i>
                    </div>
                </div>

                <p id="reviewMessage" style="display: none;"></p>
                <button type="button" onclick="submitReview()" class="btn-submit-review">Gửi đánh giá</button>
            </div>
            <div class="mt-4">
                <a class="report-toggle text-danger text-decoration-none" href="#" id="toggleReportForm" style="font-size: 20px;">
                    <i class="fas fa-flag"></i> Báo cáo bài đăng nếu bạn cảm thấy bài đăng mang tính chất lừa đảo
                </a>

                <div id="reportForm" class="report-section mt-3" style="display: none;">
                    <form asp-action="ReportHouse" asp-controller="Report" method="post">
                        <input type="hidden" name="houseId" value="@Model.IdHouse" />

                        <div class="mb-3">
                            <label for="Content" class="form-label fw-bold text-danger">
                                &nbsp;Lý do báo cáo
                            </label>
                            <textarea id="Content" name="reason" class="form-control shadow-sm rounded-3"
                                    rows="5" maxlength="500" required
                                    placeholder="Viết lý do báo cáo..." style="font-size: 16px;"></textarea>
                        </div>

                        <button type="submit" class="btn btn-danger">
                            <i class="fas fa-flag"></i> Gửi Báo Cáo
                        </button>
                    </form>
                </div>
            </div>
        }

        <label class="section-title">Các Bài Viết Khác Của Người Đăng</label>
        <div class="section-underline"></div>

        <div class="other-houses-list">
            @if (ViewBag.OtherHouses != null && (ViewBag.OtherHouses as List<KLTN.Models.House>)?.Any() == true)
            {
                <ul class="list-group">
                    @foreach (var otherHouse in ViewBag.OtherHouses as List<KLTN.Models.House>)
                    {
                        var houseDetailsList = otherHouse.HouseDetails?.ToList();
                        var firstDetail = houseDetailsList?.FirstOrDefault();

                        <li class="list-group-item">
                            <a href="@Url.Action("Detail", "Home", new { id = otherHouse.IdHouse })" class="full-link-overlay"></a>
                            <div class="d-flex align-items-start">
                                @if (firstDetail != null)
                                {
                                    var timePost = firstDetail.TimePost; 
                                    var daysAgo = (DateTime.Now - timePost).Days;

                                    <img src="@firstDetail.Image.Split(',')[0]" alt="Hình ảnh nhà"
                                        style="width: 150px; height: 160px; object-fit: cover; margin-right: 15px; margin-top:10px;" />
                                    <div class="house-info-preview" style="flex: 1;">
                                        <h5>@otherHouse.NameHouse</h5>
                                        <p><strong>Địa chỉ:</strong> @firstDetail.Address</p>
                                        <p><strong>Diện tích:</strong> @firstDetail.DienTich m²</p>
                                        <p><strong>Giá:</strong>&nbsp;<label style="color: red"> @firstDetail.Price.ToString("#,0", new System.Globalization.CultureInfo("vi-VN")) VND</label></p>
                                        <p><strong>Ngày đăng:</strong> @timePost.ToString("dd/MM/yyyy") (<em>@daysAgo ngày trước</em>)</p>
                                    </div>

                                    <a href="@Url.Action("Detail", "Home", new { id = otherHouse.IdHouse })"
                                    class="btn btn-sm btn-primary xem-chi-tiet-btn">Xem Chi Tiết</a>
                                }
                                else
                                {
                                    <p class="text-muted">Không có thông tin chi tiết phòng.</p>
                                }
                            </div>
                        </li>
                    }
                </ul>
            }
            else
            {
                <p class="no-houses-message">Chủ nhà chưa có phòng trọ khác.</p>
            }
        </div>


        <label class="section-title">Có Thể Bạn Quan Tâm</label>
        <div class="section-underline"></div>

        <div class="suggested-houses-list">
            @if (ViewBag.OtherHousesUser != null && (ViewBag.OtherHousesUser as List<KLTN.Models.House>)?.Any() == true)
            {
                <ul class="list-group">
                    @foreach (var house in ViewBag.OtherHousesUser as List<KLTN.Models.House>)
                    {
                        var firstDetail = house.HouseDetails?.FirstOrDefault();

                        <li class="list-group-item">
                            <a href="@Url.Action("Detail", "Home", new { id = house.IdHouse })" class="full-link-overlay"></a>
                            <div class="d-flex align-items-start">
                                @if (firstDetail != null)
                                {
                                    var timePost = firstDetail.TimePost; 
                                    var daysAgo = (DateTime.Now - timePost).Days;

                                    <img src="@firstDetail.Image.Split(',')[0]" alt="Hình ảnh nhà"
                                        style="width: 150px; height: 160px; object-fit: cover; margin-right: 15px; margin-top:10px;" />
                                    <div class="house-info-preview" style="flex: 1;">
                                        <h5>@house.NameHouse</h5>
                                        <p><strong>Địa chỉ:</strong> @firstDetail.Address</p>
                                        <p><strong>Diện tích:</strong> @firstDetail.DienTich m²</p>
                                        <p><strong>Giá:</strong>&nbsp;<label style="color: red"> @firstDetail.Price.ToString("#,0", new System.Globalization.CultureInfo("vi-VN")) VND</label></p>
                                        <p><strong>Ngày đăng:</strong> @timePost.ToString("dd/MM/yyyy") (<em>@daysAgo ngày trước</em>)</p>
                                    </div>

                                    <a href="@Url.Action("Detail", "Home", new { id = house.IdHouse })"
                                    class="btn btn-sm btn-primary xem-chi-tiet-btn">Xem Chi Tiết</a>
                                }
                                else
                                {
                                    <p class="text-muted">Không có thông tin chi tiết phòng.</p>
                                }
                            </div>
                        </li>
                    }
                </ul>
            } 
            else
            {
                <p class="no-houses-message">Không có nhà trọ gợi ý.</p>
            }
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/izitoast/1.4.0/js/iziToast.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/izitoast/1.4.0/css/iziToast.min.css" />
    <script src="~/js/goong-js.js"></script>
    <script src="~/js/House/detail.js"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const stars = document.querySelectorAll(".star-rating .fa-star");

            stars.forEach(star => {
                star.addEventListener("click", function () {
                    const value = parseInt(this.getAttribute("data-value"));
                    
                    // Bỏ chọn tất cả sao trước khi chọn mới
                    stars.forEach(s => s.classList.remove("selected"));
                    
                    // Chọn lại đúng số sao
                    for (let i = 0; i < value; i++) {
                        stars[i].classList.add("selected");
                    }

                    // Lưu số sao vào data attribute
                    document.querySelector(".star-rating").setAttribute("data-selected", value);
                });
            });

            const toggleBtn = document.getElementById("toggleReportForm");
            const reportForm = document.getElementById("reportForm");

            toggleBtn.addEventListener("click", function (e) {
                e.preventDefault();

                if (reportForm.style.display === "none" || reportForm.style.display === "") {
                    reportForm.style.display = "block";
                } else {
                    reportForm.style.display = "none";
                }
            });
        });

        async function submitReview() {
            let isAuthenticated = document.getElementById("isAuthenticated").value === "true";

            if (!isAuthenticated) {
                const returnUrl = encodeURIComponent(window.location.pathname + window.location.search);
                window.location.href = `/Account/Login?returnUrl=${returnUrl}`;
            }

            // Lấy số sao được chọn
            const rating = parseInt(document.querySelector(".star-rating").getAttribute("data-selected")) || 0;
            const content = document.getElementById("Content").value.trim();

            if (rating === 0 || content === "") {
                iziToast.warning({
                    title: "Cảnh báo",
                    message: "Vui lòng chọn số sao và nhập nội dung đánh giá.",
                    position: "topRight",
                    timeout: 1500,
                });
                return; 
            }

            const houseId = document.querySelector(".review-form").dataset.houseId;
            if (!houseId) {
                iziToast.error({
                    title: "Lỗi",
                    message: "Không tìm thấy IdHouse. Vui lòng thử lại.",
                    position: "topRight",
                });
                return;
            }

            const reviewData = { Rating: rating, Content: content };

            try {
                const response = await fetch(`/Detail/AddReview/${houseId}`, {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify(reviewData),
                });

                const result = await response.json();

                if (response.ok && result.success) {
                    iziToast.success({
                        title: "Thành công",
                        message: result.message,
                        position: "topRight",
                        timeout: 1500,
                    });

                    // Ẩn thông báo "Chưa có đánh giá nào" nếu có
                    const noReviewMessage = document.querySelector(".review-section p");
                    if (noReviewMessage) noReviewMessage.style.display = "none";

                    // Thêm đánh giá mới vào danh sách
                    const reviewList = document.querySelector(".review-list") || document.createElement("ul");
                    reviewList.classList.add("review-list");

                    const newReview = document.createElement("li");
                    newReview.classList.add("review-item");

                    newReview.innerHTML = `
                        <div class="review-header">
                            <strong class="review-username">${result.review.UserName}</strong>
                            <span class="review-date">${result.review.ReviewDate}</span>
                            <span class="review-rating">Rating: ${result.review.Rating} ★</span>
                        </div>
                        <p class="review-content">${result.review.Content}</p>
                    `;

                    reviewList.appendChild(newReview);

                    if (!document.querySelector(".review-list")) {
                        document.querySelector(".review-section").appendChild(reviewList);
                    }

                    // Xóa nội dung form sau khi gửi đánh giá
                    document.getElementById("Content").value = "";
                    document.querySelectorAll(".star-rating .fa-star").forEach(star => star.classList.remove("selected"));
                } else {
                    iziToast.error({
                        title: "Lỗi",
                        message: result.message || "Đã xảy ra lỗi khi gửi đánh giá.",
                        position: "topRight",
                        timeout: 1500,
                    });
                }
            } catch (error) { 
                iziToast.error({
                    title: "Lỗi",
                    message: "Đã xảy ra lỗi. Vui lòng thử lại.",
                    position: "topRight",
                    timeout: 1500,
                });
            }
        }

        function handleChatClick() {
            const isAuthenticated = document.getElementById("isAuthenticated").value === "true";

            if (!isAuthenticated) {
                // Lưu đường dẫn hiện tại kèm theo query mở chat
                const currentUrl = window.location.pathname + window.location.search;
                const returnUrl = encodeURIComponent(currentUrl);
                window.location.href = `/Account/Login?returnUrl=${returnUrl}`;
            } else {
                // Nếu đã đăng nhập thì đi tới trang chat 
                const conversationId = "@ViewBag.ConversationId";
                window.location.href = `/Chat/ChatList?conversationId=${conversationId}`;
            }
        }
        

        // Sử dụng API key cho các chức năng geocode, autocomplete, v.v.
        async function setInitialAddress() {
            var addressFromModel = document.getElementById("house-address").dataset.address;
            var decodedAddress = new DOMParser().parseFromString(addressFromModel, "text/html").body.textContent;
                console.log("Địa chỉ giải mã:", decodedAddress);

            if (decodedAddress) {
                try {
                // Gọi API Geocode với API key
                const response = await fetch(
                    `https://rsapi.goong.io/Geocode?address=${encodeURIComponent(
                    decodedAddress
                    )}&api_key=RJ9d6oO2TLx8s4Q8riMgne1hI905XhC89HxJ7fIy`
                );
                const data = await response.json();
                console.log("Kết quả từ API Goong:", data);

                if (data.results.length > 0) {
                    const { geometry, formatted_address } = data.results[0];
                    const lat = geometry.location.lat;
                    const lng = geometry.location.lng;

                    console.log("Dữ liệu từ API Goong:", data);
                    console.log("Địa chỉ:", formatted_address);
                    console.log("Latitude:", lat);
                    console.log("Longitude:", lng);
                    document.getElementById("Latitude").value = lat;
                    document.getElementById("Longitude").value = lng;

                    fetch('/House/SaveLatLng', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value
                    },
                    body: JSON.stringify({
                        houseId: @Model.IdHouse,
                        lat: lat,
                        lng: lng
                    })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        console.log("Đã lưu lat/lng vào HouseDetail");
                    } else {
                        console.error("Lỗi:", data.message);
                    }
                })
                .catch(error => {
                    console.error("Lỗi fetch:", error);
                });

                map.setCenter([geometry.location.lng, geometry.location.lat]);
                    var marker = new goongjs.Marker({ color: "red" })
                    .setLngLat([geometry.location.lng, geometry.location.lat])
                    .addTo(map)
                    .setPopup(
                        new goongjs.Popup().setHTML(
                        `<strong>Địa chỉ:</strong> ${formatted_address}`
                        )
                    )
                    .togglePopup();
                    } else {
                        alert("Không tìm thấy địa chỉ.");
                    }
                } catch (error) {
                    console.error("Lỗi khi gọi API Geocode:", error);
                }
            } else {
                console.warn("Địa chỉ không hợp lệ.");
            }
        }

        setInitialAddress();

    </script>
</body>