@model KLTN.Models.HomeViewModel

<link rel="stylesheet" href="~/css/iziToast.css">

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/">Trang Ch·ªß</a></li>
        <li class="breadcrumb-item active" aria-current="page">Danh S√°ch B√†i ƒêƒÉng C·ªßa @ViewBag.UserName</li>
    </ol>
</nav>

<div class="container">
    <h2>Danh s√°ch b√†i ƒëƒÉng c·ªßa ng∆∞·ªùi d√πng @ViewBag.UserName</h2>

    <h3>Danh s√°ch c√°c nh√† tr·ªç</h3>
    
    <table class="table-custom">
        <thead>
            <tr>
                <th>T√™n nh√† tr·ªç</th>
                <th>ƒê·ªãa ch·ªâ</th>
                <th>Gi√°</th>
                @if (@Model.IsAdmin)
                {
                    <th>Ng∆∞·ªùi ƒëƒÉng</th>
                }
                <th>H√†nh ƒë·ªông</th>
                <th>Tr·∫°ng th√°i</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var house in Model.Houses)
            {
                <tr>
                    <td>@house.NameHouse</td>
                    <td>@house.HouseDetails.FirstOrDefault()?.Address</td>
                    <td>@house.HouseDetails.FirstOrDefault()?.Price.ToString("#,0", new
                                 System.Globalization.CultureInfo("vi-VN")) VND</td>
                    @if (@Model.IsAdmin)
                    {
                        <td>@house.IdUserNavigation.UserName</td>
                    }
                    <td>
                        <button class="btn btn-primary btn-view-detail" onclick="viewDetail(@house.IdHouse, 'house')" title="Xem chi ti·∫øt b√†i ƒëƒÉng">
                            <i class="fas fa-eye"></i>
                        </button>

                        @if (true) { 
                            <button class="btn btn-warning" onclick="editItem(@house.IdHouse, 'house')" title="Ch·ªânh s·ª≠a b√†i ƒëƒÉng">
                                <i class="fas fa-edit"></i> 
                            </button>
                            
                            <button class="btn btn-danger" onclick="deleteHouse(@house.IdHouse)" title="Xo√° b√†i ƒëƒÉng">
                                <i class="fas fa-trash-alt"></i>
                            </button>

                            @if (house.Status == HouseStatus.Active || house.Status == HouseStatus.Approved) {
                                <button class="btn btn-secondary btn-hide" data-id="@house.IdHouse" title="·∫®n b√†i ƒëƒÉng">
                                    <i class="fas fa-eye-slash"></i> 
                                </button>
                            }

                            @if (house.Status == HouseStatus.Hidden) {
                                <button class="btn btn-success btn-show" data-id="@house.IdHouse" title="Hi·ªán b√†i ƒëƒÉng">
                                    <i class="fas fa-eye"></i>
                                </button>
                            }
                        }    
                    </td>

                    <td>
                        @if (house.Status == HouseStatus.Pending)
                            {
                                <span class="badge bg-warning text-dark">Ch·ªù duy·ªát</span>
                            }  
                        else if (house.Status == HouseStatus.Approved || house.Status == HouseStatus.Active || house.Status == HouseStatus.Hidden)
                            {
                                <span class="badge bg-success">ƒê√£ duy·ªát</span>
                            }
                        else 
                            {
                                <span class="badge bg-danger">B·ªã t·ª´ ch·ªëi</span>
                            }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/izitoast/dist/js/iziToast.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/izitoast/dist/css/iziToast.min.css">

    <script>
        function viewDetail(id, type) {
            const url = `/Home/Detail?id=${id}&type=${type}`;
            fetch(url, { method: 'GET' })
                .then(response => {
                    if (response.ok) {
                        window.location.href = url;
                    } else {
                        iziToast.error({
                            title: "L·ªói!",
                            message: "Kh√¥ng th·ªÉ t·∫£i chi ti·∫øt. Vui l√≤ng th·ª≠ l·∫°i.",
                            position: "topRight"
                        });
                    }
                })
                .catch(() => {
                    iziToast.error({
                        title: "L·ªói!",
                        message: "ƒê√£ x·∫£y ra l·ªói khi x·ª≠ l√Ω y√™u c·∫ßu.",
                        position: "topRight"
                    });
                });
        }

        function editItem(id) {
            const url = `/QuanLi/EditHouse?id=${id}`;
            fetch(url, { method: 'GET' })
                .then(response => {
                    if (response.ok) {
                        window.location.href = url;
                    } else {
                        iziToast.error({
                            title: "L·ªói!",
                            message: "Kh√¥ng th·ªÉ t·∫£i trang ch·ªânh s·ª≠a. Vui l√≤ng th·ª≠ l·∫°i.",
                            position: "topRight"
                        });
                    }
                })
                .catch(() => {
                    iziToast.error({
                        title: "L·ªói!",
                        message: "ƒê√£ x·∫£y ra l·ªói khi x·ª≠ l√Ω y√™u c·∫ßu.",
                        position: "topRight"
                    });
                });
        }

        async function deleteHouse(id) {
        iziToast.show({
            class: "iziToast-custom",
            title: "üîî X√°c nh·∫≠n x√≥a",
            message: "B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a? D·ªØ li·ªáu n√†y s·∫Ω kh√¥ng th·ªÉ kh√¥i ph·ª•c!",
            position: "center",
            timeout: false,
            close: false,
            overlay: true,
            displayMode: "once",
            drag: false,
            icon: "fa fa-warning",
            buttons: [
                [
                    '<button><i class="fa fa-check"></i> X√≥a ngay</button>',
                    async function (instance, toast) {
                        instance.hide({ transitionOut: "fadeOut" }, toast, "button");

                        try {
                            const response = await fetch(`/QuanLi/DeleteHouse?id=${id}`, { method: "DELETE" });
                            const result = await response.json();

                            if (result.success) {
                                iziToast.success({
                                    title: "Th√†nh c√¥ng!",
                                    message: result.message,
                                    position: "topRight",
                                    timeout: 1500
                                });
                                setTimeout(() => location.reload(), 1200);
                            } else {
                                iziToast.error({
                                    title: "L·ªói!",
                                    message: result.message,
                                    position: "topRight"
                                });
                            }
                        } catch (error) {
                            iziToast.error({
                                title: "L·ªói!",
                                message: "Kh√¥ng th·ªÉ x√≥a nh√† tr·ªç!",
                                position: "topRight"
                            });
                        }
                    },
                    true
                ],
                [
                    '<button><i class="fa fa-times"></i> H·ªßy</button>',
                    function (instance, toast) {
                        instance.hide({ transitionOut: "fadeOut" }, toast, "button");
                    }
                ]
            ]
        });
    }

    function showUnauthorizedMessage() {
        iziToast.warning({
            title: "C·∫£nh b√°o!",
            message: "B·∫°n kh√¥ng ƒë·ªß th·∫©m quy·ªÅn ƒë·ªÉ truy c·∫≠p ch·ª©c nƒÉng n√†y.",
            position: "topRight"
        });
    }
        $(document).ready(function () {
            $(".btn-hide").on("click", function () {
                const houseId = $(this).data("id");

                iziToast.show({
                    class: "iziToast-custom",
                    title: "üîî X√°c nh·∫≠n",
                    message: "B·∫°n c√≥ ch·∫Øc mu·ªën ·∫©n b√†i n√†y? B√†i ƒëƒÉng s·∫Ω kh√¥ng hi·ªÉn th·ªã c√¥ng khai!",
                    position: "center",
                    timeout: false,
                    close: false,
                    overlay: true,
                    displayMode: "once",
                    drag: false,
                    icon: "fa fa-eye-slash",
                    buttons: [
                        [
                            '<button><i class="fa fa-check"></i> ·∫®n ngay</button>',
                            function (instance, toast) {
                                instance.hide({ transitionOut: "fadeOut" }, toast, "button");

                                $.post("/QuanLi/HideHouse", { id: houseId }, function (response) {
                                    if (response.success) {
                                        iziToast.success({
                                            title: "Th√†nh c√¥ng!",
                                            message: response.message,
                                            position: "topRight",
                                            timeout: 1000
                                        });
                                        setTimeout(() => location.reload(), 1000);
                                    } else {
                                        iziToast.error({
                                            title: "L·ªói!",
                                            message: response.message,
                                            position: "topRight"
                                        });
                                    }
                                }).fail(function () {
                                    iziToast.error({
                                        title: "L·ªói!",
                                        message: "Kh√¥ng th·ªÉ th·ª±c hi·ªán y√™u c·∫ßu!",
                                        position: "topRight"
                                    });
                                });
                            },
                            true
                        ],
                        [
                            '<button><i class="fa fa-times"></i> H·ªßy</button>',
                            function (instance, toast) {
                                instance.hide({ transitionOut: "fadeOut" }, toast, "button");
                            }
                        ]
                    ]
                });
            });

            $(".btn-show").on("click", function () {
                const houseId = $(this).data("id");

                iziToast.show({
                    class: "iziToast-custom",
                    title: "üîî X√°c nh·∫≠n",
                    message: "B·∫°n c√≥ ch·∫Øc mu·ªën hi·ªán b√†i n√†y? B√†i ƒëƒÉng s·∫Ω hi·ªÉn th·ªã c√¥ng khai tr·ªü l·∫°i!",
                    position: "center",
                    timeout: false,
                    close: false,
                    overlay: true,
                    displayMode: "once",
                    drag: false,
                    icon: "fa fa-eye",
                    buttons: [
                        [
                            '<button><i class="fa fa-check"></i> Hi·ªán ngay</button>',
                            function (instance, toast) {
                                instance.hide({ transitionOut: "fadeOut" }, toast, "button");

                                $.post("/QuanLi/ShowHouse", { id: houseId }, function (response) {
                                    if (response.success) {
                                        iziToast.success({
                                            title: "Th√†nh c√¥ng!",
                                            message: response.message,
                                            position: "topRight",
                                            timeout: 1000
                                        });
                                        setTimeout(() => location.reload(), 1000);
                                    } else {
                                        iziToast.error({
                                            title: "L·ªói!",
                                            message: response.message,
                                            position: "topRight"
                                        });
                                    }
                                }).fail(function () {
                                    iziToast.error({
                                        title: "L·ªói!",
                                        message: "Kh√¥ng th·ªÉ th·ª±c hi·ªán y√™u c·∫ßu!",
                                        position: "topRight"
                                    });
                                });
                            },
                            true
                        ],
                        [
                            '<button><i class="fa fa-times"></i> H·ªßy</button>',
                            function (instance, toast) {
                                instance.hide({ transitionOut: "fadeOut" }, toast, "button");
                            }
                        ]
                    ]
                });
            });
        });
    </script>
}

<style>
    h2,
    h3 {
        font-family: Arial, sans-serif;
        color: #333;
        margin-top: 20px;
        margin-bottom: 20px;
        font-weight: bold;
        text-align: center;
    }

    .table-custom {
        width: 100%;
        border-collapse: collapse;
        margin-bottom: 30px;
        border: 1px solid #333;
        background-color: #ffffff;
    }

    .table-custom th,
    .table-custom td {
        padding: 6px;
        text-align: left;
    }

    .table-custom thead {
        background-color: #f2f2f2;
        font-weight: bold;
        color: #555;
        border: 1px solid #333;
    }

    .table-custom tbody tr {
        border-bottom: 1px solid #ddd;
        transition: background-color 0.3s;
    }

    .table-custom tbody tr:hover {
        background-color: #f9f9f9;
    }

    .table-custom th,
    .table-custom td {
        border: 1px solid #333;
    }

    .table-custom th:last-child,
    .table-custom td:last-child {
        border-right: none;
    }

    .btn {
        padding: 8px 8px;
        border-radius: 4px;
        text-decoration: none;
        color: white;
        margin-right: 2px;
        transition: background-color 0.3s;
    }
    
    /* ƒê·ªãnh d·∫°ng kh√°c cho ph·∫ßn container */
    .container {
        width: 90%;
        margin: auto;
        font-family: Arial, sans-serif;
    }
</style>
