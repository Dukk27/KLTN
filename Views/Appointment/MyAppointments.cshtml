@model IEnumerable<KLTN.Models.Appointment>

<head>
    <link rel="stylesheet" href="~/css/iziToast.css">
    <link rel="stylesheet" href="~/css/appointment.css">
</head>

<body>
    <div class="appointment-page">

        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/">Trang Chủ</a></li>
                <li class="breadcrumb-item active" aria-current="page">Lịch hẹn tôi đã đặt</li>
            </ol>
        </nav>

        <h2>Lịch hẹn tôi đã đặt</h2>
        
        <div class="container">
            <form id="searchFilterForm" class="row g-3 align-items-center mb-3">
                <div class="col-12 col-md-2 col-lg-4">
                    <label for="searchInput" class="form-label">Tìm kiếm</label>
                    <div class="input-group">
                        <span class="input-group-text">
                            <i class="fas fa-search"></i>
                        </span>
                        <input type="text" id="searchInput" class="form-control" placeholder="Tìm kiếm theo tiêu đề bài đăng..." onkeyup="filterAppointments()" />
                    </div>
                </div>

                <div class="col-12 col-md-2 col-lg-2">
                    <label for="statusFilter" class="form-label">Trạng thái</label>
                    <select id="statusFilter" class="form-select" onchange="filterAppointments()">
                        <option value="">-- Tất cả trạng thái --</option>
                        <option value="pending">Chờ xác nhận</option>
                        <option value="confirmed">Đã được xác nhận</option>
                        <option value="cancelled">Đã bị hủy</option>
                    </select>
                </div> 

                <div class="col-12 col-md-2 col-lg-2">
                    <label for="startDate" class="form-label">Từ ngày</label>
                    <input type="date" id="startDate" class="form-control" onchange="filterAppointments()" />
                </div>

                <div class="col-12 col-md-2 col-lg-2">
                    <label for="endDate" class="form-label">Đến ngày</label>
                    <input type="date" id="endDate" class="form-control" onchange="filterAppointments()" />
                </div>

                <div class="col-12 col-md-2 col-lg-2">
                    <button type="button" class="btn btn-del w-100" onclick="clearFilters()">                
                        <i class="fas fa-times-circle"></i> &nbsp; Xoá lọc
                    </button>
                </div>
            </form>
        </div>

        <div class="d-flex justify-content-center mb-3">
            <form method="get" class="d-inline">
                <select id="filter" name="filter" class="form-select d-inline w-auto" onchange="this.form.submit()">
                    @if ((string)ViewBag.Filter == "expired")
                    {
                        <option value="valid">Lịch còn hạn</option>
                        <option value="expired" selected>Lịch đã hết hạn</option>
                    }
                    else
                    {
                        <option value="valid" selected>Lịch còn hạn</option>
                        <option value="expired">Lịch đã hết hạn</option>
                    }
                </select>
            </form>
        </div>

        @if (!Model.Any())
        {
            <div class="no-appointments">Bạn chưa đặt lịch hẹn nào.</div>
        }
        else
        {
            <div class="table-responsive">
                <table class="table table-bordered table-hover align-middle">
                    <thead class="table-secondary">
                        <tr>
                            <th>Tên bài đăng</th>
                            <th>Chủ bài đăng</th>
                            <th>Liên hệ</th>
                            <th>Ngày hẹn</th>
                            <th>Trạng thái</th>
                            <th>Hành động</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var appt in Model)
                        {
                            var isExpired = appt.AppointmentDate < DateTime.Now && appt.Status == AppointmentStatus.Pending;

                            var currentUserId = Context.Session.GetInt32("UserId") ?? 0;
                            var otherUserId = appt.House?.IdUserNavigation?.IdUser ?? 0;
                            var conversationId = currentUserId < otherUserId
                                ? $"{currentUserId}-{otherUserId}"
                                : $"{otherUserId}-{currentUserId}";

                            <tr data-id="@appt.AppointmentId" data-status="@appt.Status.ToString().ToLower()">
                                <td>
                                    <a href="@Url.Action("Detail", "Home", new { id = appt.House?.IdHouse })" style="text-decoration: none">
                                        <b>@appt.House?.NameHouse</b>
                                    </a>
                                </td>
                                <td>@appt.House?.IdUserNavigation?.UserName</td>
                                <td>
                                    <div><i class="fas fa-phone me-1"></i>@appt.House?.IdUserNavigation?.PhoneNumber</div>
                                    <div><i class="fas fa-envelope me-1"></i>@appt.House?.IdUserNavigation?.Email</div>
                                </td>
                                <td>@appt.AppointmentDate.ToString("dd/MM/yyyy HH:mm")</td>
                                <td>
                                    <span class="badge @(isExpired ? "bg-secondary" : (appt.Status == AppointmentStatus.Pending ? "bg-warning text-dark" : appt.Status == AppointmentStatus.Confirmed ? "bg-success" : "bg-danger"))">
                                        @(isExpired ? "Chưa được xác nhận (quá hạn)" : appt.Status == AppointmentStatus.Pending ? "Chờ xác nhận" : appt.Status == AppointmentStatus.Confirmed ? "Đã được xác nhận" : "Đã bị hủy")
                                    </span>
                                </td>
                                <td>
                                    <a href="@Url.Action("ChatList", "Chat", new { conversationId = conversationId })" class="btn btn-sm btn-primary mb-1" style="max-width: 200px">
                                        <i class="fas fa-comments"></i> Nhắn tin với chủ trọ
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>

    <script>
        function filterAppointments() {
            var searchInput = document.getElementById('searchInput').value.toLowerCase();
            var statusFilter = document.getElementById('statusFilter').value.toLowerCase();
            var startDate = document.getElementById('startDate').value;
            var endDate = document.getElementById('endDate').value;
            var rows = document.querySelectorAll('table tbody tr');

            rows.forEach(function (row) {
                var titleText = row.querySelector('td:nth-child(1)').textContent.toLowerCase();
                var rowStatus = row.getAttribute('data-status') || '';
                var appointmentDate = row.querySelector('td:nth-child(4)').textContent.trim();

                // Chuyển đổi ngày trong bảng sang định dạng yyyy-MM-dd để so sánh với ngày input
                var formattedAppointmentDate = formatDateForComparison(appointmentDate);

                // Kiểm tra các điều kiện lọc
                var matchesSearch = titleText.includes(searchInput);
                var matchesStatus = statusFilter === '' || rowStatus === statusFilter;
                var matchesDate = true;

                if (startDate) {
                    matchesDate = formattedAppointmentDate >= startDate;
                }

                if (endDate) {
                    matchesDate = matchesDate && formattedAppointmentDate <= endDate;
                }

                // Ẩn hoặc hiển thị dòng theo điều kiện lọc
                row.style.display = (matchesSearch && matchesStatus && matchesDate) ? '' : 'none';
            });
        }

        // Hàm chuyển đổi ngày từ định dạng dd/MM/yyyy HH:mm thành yyyy-MM-dd để so sánh với input date
        function formatDateForComparison(appointmentDate) {
            var dateParts = appointmentDate.split(" ")[0].split("/"); // Lấy phần ngày (dd/MM/yyyy)
            var day = dateParts[0];
            var month = dateParts[1];
            var year = dateParts[2];
            return `${year}-${month}-${day}`; // Định dạng ngày thành yyyy-MM-dd
        }

        function clearFilters() {
            // Xóa các giá trị trong các trường nhập liệu
            document.getElementById('searchInput').value = '';
            document.getElementById('statusFilter').value = '';
            document.getElementById('startDate').value = '';
            document.getElementById('endDate').value = '';

            // Gọi lại hàm filterAppointments để lọc lại danh sách
            filterAppointments();
        }

        window.onload = function () {
            filterAppointments(); // Lọc khi tải trang
        };
    </script>
</body>
