@model IEnumerable<KLTN.Models.Appointment>

<h2>Danh Sách Lịch Hẹn</h2>

@if (!Model.Any())
{
    <div class="no-appointments">Chưa có lịch hẹn nào cho bài đăng của bạn.</div>
}
else
{
    <div class="table-container">
        <table class="table">
            <thead>
                <tr>
                    <th>Người Đặt Hẹn</th>
                    <th>Tên Nhà Trọ</th>
                    <th>Ngày Hẹn</th>
                    <th>Trạng Thái</th>
                    <th>Hành Động</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var appointment in Model)
                {
                    <tr>
                        <td>@appointment.User?.UserName</td>
                        <td>@appointment.House?.NameHouse</td>
                        <td>@appointment.AppointmentDate.ToString("dd/MM/yyyy")</td>
                        <td>
                            @if (appointment.Status == AppointmentStatus.Pending)
                            {
                                <span class="badge badge-warning">Chờ xác nhận</span>
                            }
                            else if (appointment.Status == AppointmentStatus.Confirmed)
                            {
                                <span class="badge badge-success">Đã xác nhận</span>
                            }
                            else
                            {
                                <span class="badge badge-danger">Đã hủy</span>
                            }
                        </td>
                        <td>
                            @if (appointment.Status == AppointmentStatus.Pending)
                            {
                                <button class="btn btn-success confirm-btn" data-id="@appointment.AppointmentId">Xác nhận</button>
                                <button class="btn btn-danger cancel-btn" data-id="@appointment.AppointmentId">Hủy</button>
                            }
                            else
                            {
                                <span class="text-muted">Không khả dụng</span>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}


<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    document.querySelectorAll('.confirm-btn').forEach(button => {
        button.addEventListener('click', async function () {
            const id = this.getAttribute('data-id');

            Swal.fire({
                title: "Xác nhận lịch hẹn?",
                text: "Bạn có chắc chắn muốn xác nhận lịch hẹn này?",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#28a745",
                cancelButtonColor: "#d33",
                confirmButtonText: "Xác nhận",
                cancelButtonText: "Hủy"
            }).then(async (result) => {
                if (result.isConfirmed) {
                    const response = await fetch('/Appointment/Confirm?id=' + id, { method: 'POST' });
                    const result = await response.json();

                    if (response.ok) {
                        Swal.fire({
                            title: "Thành công!",
                            text: result.message,
                            icon: "success",
                            confirmButtonColor: "#28a745"
                        });

                        // **Cập nhật giao diện**
                        const row = button.closest('tr');

                        // Cập nhật trạng thái
                        const statusCell = row.querySelector('td:nth-child(4)');
                        statusCell.innerHTML = '<span class="badge badge-success">Đã xác nhận</span>';

                        // Xóa các nút xác nhận và hủy, thay bằng chữ "Không khả dụng"
                        const actionCell = row.querySelector('td:nth-child(5)');
                        actionCell.innerHTML = '<span class="text-muted">Không khả dụng</span>';
                    }
                }
            });
        });
    });

    document.querySelectorAll('.cancel-btn').forEach(button => {
        button.addEventListener('click', async function () {
            const id = this.getAttribute('data-id');

            Swal.fire({
                title: "Hủy lịch hẹn?",
                text: "Bạn có chắc chắn muốn hủy lịch hẹn này?",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#dc3545",
                cancelButtonColor: "#6c757d",
                confirmButtonText: "Hủy",
                cancelButtonText: "Quay lại"
            }).then(async (result) => {
                if (result.isConfirmed) {
                    const response = await fetch('/Appointment/Cancel?id=' + id, { method: 'POST' });
                    const result = await response.json();

                    if (response.ok) {
                        Swal.fire({
                            title: "Đã hủy!",
                            text: result.message,
                            icon: "success",
                            confirmButtonColor: "#dc3545"
                        });

                        // **Cập nhật giao diện**
                        const row = button.closest('tr');

                        // Cập nhật trạng thái
                        const statusCell = row.querySelector('td:nth-child(4)');
                        statusCell.innerHTML = '<span class="badge badge-danger">Đã hủy</span>';

                        // Xóa các nút xác nhận và hủy, thay bằng chữ "Không khả dụng"
                        const actionCell = row.querySelector('td:nth-child(5)');
                        actionCell.innerHTML = '<span class="text-muted">Không khả dụng</span>';
                    }
                }
            });
        });
    });

</script>

<style>
    h2 {
        font-family: Arial, sans-serif;
        color: #333;
        margin-top: 20px;
        margin-bottom: 20px;
        font-weight: bold;
        text-align: center;
    }

    .table-container {
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
        margin-top: 20px;
    }

    .table {
        width: 100%;
        max-width: 1300px;
        border-collapse: collapse;
        background: #fff;
        overflow: hidden;
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
        border: 1px solid #333;
        margin-bottom: 30px;
    }

    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
    }

    .table th,
    .table td {
        padding: 12px;
        text-align: center;
        border-bottom: 1px solid #ddd;
        border: 1px solid #333;

    }

    .table th {
        background: #f2f2f2;
        color: #555;
        font-weight: bold;
        border-bottom: 2px solid #ddd;
        border: 1px solid #333;
    }

    .table tbody tr:hover {
        background-color: #f9f9f9;
    }

    .table td {
        border-right: 1px solid #333;
    }

    .table th:last-child,
    .table td:last-child {
        border-right: none;
    }

    .badge {
        display: inline-block;
        padding: 6px 12px;
        font-size: 14px;
        border-radius: 15px;
        font-weight: bold;
    }

    .badge-warning {
        background-color: #ffc107;
        color: #fff;
    }

    .badge-success {
        background-color: #28a745;
        color: #fff;
    }

    .badge-danger {
        background-color: #dc3545;
        color: #fff;
    }

    .btn {
        padding: 8px 12px;
        border-radius: 4px;
        text-decoration: none;
        color: white;
        margin-right: 5px;
        transition: background-color 0.3s;
    }

    .btn-success {
        background-color: #28a745;
    }

    .btn-success:hover {
        background-color: #218838;
    }

    .btn-danger {
        background-color: #dc3545;
    }

    .btn-danger:hover {
        background-color: #c82333;
    }

    .btn-warning {
        background-color: #FFA500;
    }

    .btn-warning:hover {
        background-color: #e68900;
    }

    .btn-view-detail {
        background-color: #4CAF50;
    }

    .btn-view-detail:hover {
        background-color: #45a049;
    }

    .container {
        width: 90%;
        margin: auto;
        font-family: Arial, sans-serif;
    }

    .btn-secondary {
        background-color: #6c757d;
        color: white;
    }

    .btn-secondary:hover {
        background-color: #5a6368;
    }

    .no-appointments {
        text-align: center;
        font-size: 18px;
        font-weight: bold;
        color: #555;
        background-color: #f8d7da;
        /* Màu nền nhẹ nhàng */
        border: 1px solid #f5c6cb;
        padding: 15px;
        border-radius: 8px;
        margin-top: 20px;
        max-width: 500px;
        margin-left: auto;
        margin-right: auto;
    }
</style>
