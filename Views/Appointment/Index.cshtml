@model IEnumerable<KLTN.Models.Appointment>

<head>
    <link rel="stylesheet" href="~/css/iziToast.css">
    <link rel="stylesheet" href="~/css/appointment.css">
</head>
 
<body>
    <div class="appointment-page">

    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/">Trang Chủ</a></li>
            <li class="breadcrumb-item active" aria-current="page">Lịch hẹn</li>
        </ol>
    </nav>
 
    <h2>Danh sách lịch hẹn</h2>

    <div class="container">
        <form id="searchFilterForm" class="row g-3 align-items-center mb-3">
            <div class="col-12 col-md-3">
                <div class="d-flex flex-column">
                    <label for="searchInput" class="form-label">Tìm kiếm</label>
                    <div class="input-group">
                        <span class="input-group-text">
                            <i class="fas fa-search"></i>
                        </span>
                        <input type="text" id="searchInput" class="form-control" placeholder="Tìm kiếm theo tiêu đề bài đăng..." onkeyup="filterAppointments()" />
                    </div>
                </div>
            </div>

            <!-- Ô lọc trạng thái -->
            <div class="col-12 col-md-2">
                <div class="d-flex flex-column">
                    <label for="statusFilter" class="form-label">Trạng thái</label>
                    <select id="statusFilter" class="form-select" onchange="filterAppointments()">
                        <option value="">-- Tất cả trạng thái --</option>
                        <option value="pending">Cần xác nhận</option>
                        <option value="confirmed">Đã xác nhận</option>
                        <option value="cancelled">Đã hủy</option>
                    </select>
                </div>
            </div>

            <!-- Ô lọc người đặt -->
            <div class="col-12 col-md-2">
                <div class="d-flex flex-column">
                    <label for="userFilter" class="form-label">Người đặt</label>
                    <select id="userFilter" class="form-select" onchange="filterAppointments()">
                        <option value="">-- Tất cả người đặt --</option>
                        @foreach (var user in Model.Select(a => a.User?.UserName).Distinct())
                        {
                            <option value="@user">@user</option>
                        }
                    </select>
                </div>
            </div>

            <!-- Ô lọc từ ngày -->
            <div class="col-12 col-md-2">
                <div class="d-flex flex-column">
                    <label for="startDate" class="form-label">Từ ngày</label>
                    <input type="date" id="startDate" class="form-control" onchange="filterAppointments()" />
                </div>
            </div>

            <!-- Ô lọc đến ngày -->
            <div class="col-12 col-md-2">
                <div class="d-flex flex-column">
                    <label for="endDate" class="form-label">Đến ngày</label>
                    <input type="date" id="endDate" class="form-control" onchange="filterAppointments()" />
                </div>
            </div>

            <!-- Nút xóa bộ lọc -->
            <div class="col-12 col-md-1">
                <div class="d-flex flex-column">
                    <button type="button" class="btn btn-del" onclick="clearFilters()">
                        <i class="fas fa-times-circle"></i> &nbsp; Xoá lọc
                    </button>
                </div>
            </div>
        </form>
    </div>

    <div class="d-flex justify-content-center mb-3">
        <form method="get" class="d-inline">
            <select id="filter" name="filter" class="form-select d-inline w-auto" onchange="this.form.submit()">
                @if ((string)ViewBag.Filter == "expired")
                {
                    <option value="valid">Lịch còn hạn</option>
                    <option value="expired" selected>Lịch đã hết hạn</option>
                }
                else
                {
                    <option value="valid" selected>Lịch còn hạn</option>
                    <option value="expired">Lịch đã hết hạn</option>
                }
            </select>
        </form>
    </div> 

   @if (!Model.Any()) 
    {
        <div class="no-appointments">Chưa có lịch hẹn nào cho bài đăng của bạn.</div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-bordered table-hover align-middle">
                <thead class="table-secondary">
                    <tr>
                        <th>Bài đăng</th>
                        <th>Người đặt</th>
                        <th>Liên hệ</th>
                        <th>Ngày hẹn</th>
                        <th>Trạng thái</th>
                        <th>Hành động</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var appt in Model)
                    {
                        
                        var isExpired = appt.AppointmentDate < DateTime.Now && appt.Status == AppointmentStatus.Pending;

                        var currentUserId = Context.Session.GetInt32("UserId") ?? 0;
                        var otherUserId = appt.User?.IdUser ?? 0;
                        var conversationId = currentUserId < otherUserId
                            ? $"{currentUserId}-{otherUserId}"
                            : $"{otherUserId}-{currentUserId}";

                        <tr data-id="@appt.AppointmentId" data-status="@appt.Status.ToString().ToLower()">
                            <td>
                                <a href="@Url.Action("Detail", "Home", new { id = appt.House?.IdHouse })" style="text-decoration: none">
                                    <b>@appt.House?.NameHouse</b>
                                </a>
                            </td>
                            <td>@appt.User?.UserName</td>
                            <td>
                                <div><i class="fas fa-phone me-1"></i>@appt.User?.PhoneNumber</div>
                                <div><i class="fas fa-envelope me-1"></i>@appt.User?.Email</div>
                            </td>
                            <td>@appt.AppointmentDate.ToString("dd/MM/yyyy HH:mm")</td>
                            <td>
                                <span class="badge @(isExpired ? "bg-secondary" : (appt.Status == AppointmentStatus.Pending ? "bg-warning text-dark" : appt.Status == AppointmentStatus.Confirmed ? "bg-success" : "bg-danger"))">
                                    @(isExpired ? "Chưa xác nhận (quá hạn)" : appt.Status == AppointmentStatus.Pending ? "Cần xác nhận" : appt.Status == AppointmentStatus.Confirmed ? "Đã xác nhận" : "Đã hủy")
                                </span>
                            </td>
                            <td class="action-buttons">
                                <div class="d-flex flex-column" style="max-width: 200px">
                                    <a href="@Url.Action("ChatList", "Chat", new { conversationId = conversationId })"
                                    class="btn btn-sm btn-primary mb-1 btn-nhantin">
                                        <i class="fas fa-comments"></i> Nhắn tin với @appt.User?.UserName
                                    </a>

                                    @if (appt.Status == AppointmentStatus.Pending && !isExpired)
                                    {
                                        <div class="d-flex justify-content-between button-group ">
                                            <button class="btn btn-sm btn-success flex-fill confirm-btn" data-id="@appt.AppointmentId">Xác nhận</button>
                                            <button class="btn btn-sm btn-danger flex-fill cancel-btn" data-id="@appt.AppointmentId">Hủy</button>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="text-muted" style="font-style: italic; text-align: center">
                                            @(isExpired ? "Đã hết hạn" : "Không khả dụng")
                                        </div>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    </div>

    <script src="https://cdn.jsdelivr.net/npm/izitoast/dist/js/iziToast.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/izitoast/dist/css/iziToast.min.css">
    <script src="~/js/Appointment/index.js"></script>
    <script>
       function filterAppointments() {
            var searchInput = document.getElementById('searchInput').value.toLowerCase();
            var statusFilter = document.getElementById('statusFilter').value.toLowerCase();
            var userFilter = document.getElementById('userFilter').value.toLowerCase();
            var startDate = document.getElementById('startDate').value;
            var endDate = document.getElementById('endDate').value;
            var rows = document.querySelectorAll('table tbody tr');

            rows.forEach(function (row) {
                var titleText = row.querySelector('td:nth-child(1)').textContent.toLowerCase();
                var rowStatus = row.getAttribute('data-status') || '';
                var userName = row.querySelector('td:nth-child(2)').textContent.toLowerCase();
                var appointmentDate = row.querySelector('td:nth-child(4)').textContent.trim();

                // Kiểm tra nếu tiêu đề bài đăng, trạng thái, người đặt và ngày có khớp với các bộ lọc
                var matchesSearch = titleText.includes(searchInput);
                var matchesStatus = statusFilter === '' || rowStatus === statusFilter;
                var matchesUser = userFilter === '' || userName.toLowerCase().includes(userFilter);
                var matchesDate = true;

                if (startDate) {
                    matchesDate = formatDateForComparison(appointmentDate) >= startDate;
                }

                if (endDate) {
                    matchesDate = matchesDate && formatDateForComparison(appointmentDate) <= endDate;
                }

                // Ẩn hoặc hiển thị dòng theo điều kiện lọc
                row.style.display = (matchesSearch && matchesStatus && matchesUser && matchesDate) ? '' : 'none';
            });
        }

        // Hàm chuyển đổi ngày từ định dạng dd/MM/yyyy HH:mm thành yyyy-MM-dd để so sánh với input date
        function formatDateForComparison(appointmentDate) {
            var dateParts = appointmentDate.split(" ")[0].split("/"); // Lấy phần ngày (dd/MM/yyyy)
            var day = dateParts[0];
            var month = dateParts[1];
            var year = dateParts[2];
            return `${year}-${month}-${day}`; // Định dạng ngày thành yyyy-MM-dd
        }

        function clearFilters() {
            // Xóa giá trị của tất cả các ô lọc
            document.getElementById('searchInput').value = '';
            document.getElementById('statusFilter').value = '';
            document.getElementById('userFilter').value = '';
            document.getElementById('startDate').value = '';
            document.getElementById('endDate').value = '';

            // Sau khi xóa, gọi lại hàm lọc
            filterAppointments();
        }

        window.onload = function () {
            filterAppointments(); // Lọc khi tải trang
        };
    </script>
</body>
