@model IEnumerable<KLTN.Models.Review>

<head>
    <link rel="stylesheet" href="~/css/iziToast.css">
    <link rel="stylesheet" href="~/css/Admin/responsive.css">
    <link rel="stylesheet" href="~/css/Admin/review.css">
</head>
 
<body>
    <h3 class="text-center mt-3">Qu·∫£n l√Ω b√¨nh lu·∫≠n</h3>

    @if (Model.Any()) 
    {
        <div class="row mb-3">
            <div class="col-12 col-md-6 d-flex">
                <!-- √î t√¨m ki·∫øm -->
                <input type="text" id="searchInput" class="form-control" placeholder="üîç T√¨m ki·∫øm b√¨nh lu·∫≠n...">
            </div>
            <div class="col-12 col-md-6 d-flex justify-content-end">
                <!-- N√∫t x√≥a -->
                <button class="btn btn-danger delete-selected-btn" disabled>
                    <i class="fas fa-trash-alt"></i>&nbsp;X√≥a b√¨nh lu·∫≠n ƒë√£ ch·ªçn
                </button>
            </div>
        </div>

        <table class="table table-bordered table-hover">
            <thead>
                <tr>
                    <th><input type="checkbox" id="select-all"></th>
                    <th>Ng∆∞·ªùi ƒë√°nh gi√°</th>
                    <th>Ti√™u ƒë·ªÅ b√†i ƒëƒÉng</th>
                    <th>N·ªôi dung</th>
                    <th>M·ª©c sao ƒë√°nh gi√°</th>
                    <th>Ng√†y ƒë√°nh gi√°</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var review in Model)
                {
                    <tr>
                        <td><input type="checkbox" class="review-checkbox" value="@review.IdReview"></td>
                        <td>@review.IdUserNavigation?.UserName</td>
                        <td>
                            <a href="@Url.Action("Detail", "Home", new { id = review.IdHouseNavigation?.IdHouse })"class="house-link">
                                @review.IdHouseNavigation?.NameHouse
                            </a>
                        </td>                        
                        <td>@review.Content</td>
                        <td>@review.Rating</td>
                        <td>@review.ReviewDate?.ToString("dd/MM/yyyy")</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <div class="no-reviews">Kh√¥ng c√≥ b√¨nh lu·∫≠n.</div>
    }

    <!-- Th√™m th∆∞ vi·ªán iziToast -->
    <script src="https://cdn.jsdelivr.net/npm/izitoast/dist/js/iziToast.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/izitoast/dist/css/iziToast.min.css">

    <script>
        $(document).ready(function () {
            // X√≥a t·ª´ng b√¨nh lu·∫≠n
            $(".delete-review").on("click", function () {
                const id = $(this).data("id");
                confirmDelete([id]);
            });

            // X√≥a nhi·ªÅu b√¨nh lu·∫≠n ƒë√£ ch·ªçn
            $(".delete-selected-btn").on("click", function () {
                const selectedIds = $(".review-checkbox:checked").map(function () {
                    return $(this).val();
                }).get();

                if (selectedIds.length === 0) return;
                confirmDelete(selectedIds);
            });

            // Ch·ªçn t·∫•t c·∫£ checkbox
            $("#select-all").on("change", function () {
                $(".review-checkbox").prop("checked", this.checked);
                toggleDeleteSelectedButton();
            });

            // Khi ch·ªçn checkbox ri√™ng l·∫ª
            $(document).on("change", ".review-checkbox", function () {
                $("#select-all").prop("checked", $(".review-checkbox:checked").length === $(".review-checkbox").length);
                toggleDeleteSelectedButton();
            });

            // B·∫≠t/t·∫Øt n√∫t "X√≥a ƒë√£ ch·ªçn"
            function toggleDeleteSelectedButton() {
                $(".delete-selected-btn").prop("disabled", $(".review-checkbox:checked").length === 0);
            }

            // X√°c nh·∫≠n x√≥a
            function confirmDelete(ids) {
                iziToast.show({
                    class: "iziToast-custom",
                    title: "X√°c nh·∫≠n x√≥a",
                    message: `B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a ${ids.length > 1 ? "c√°c b√¨nh lu·∫≠n" : "b√¨nh lu·∫≠n"} ƒë√£ ch·ªçn?`,
                    position: "center",
                    timeout: false,
                    close: false,
                    overlay: true,
                    icon: "fa fa-question-circle",
                    displayMode: "once",
                    buttons: [
                        [
                            '<button><i class="fa fa-trash"></i> X√≥a</button>',
                            function (instance, toast) {
                                instance.hide({ transitionOut: "fadeOut" }, toast, "button");

                                $.ajax({
                                    url: "@Url.Action("DeleteSelectedReviews", "Admin")",
                                    type: "POST",
                                    contentType: "application/json",
                                    data: JSON.stringify(ids),
                                    success: function (response) {
                                        iziToast.show({
                                            title: response.success ? "Th√†nh c√¥ng!" : "L·ªói!",
                                            message: response.message,
                                            position: "topRight",
                                            color: response.success ? "green" : "red",
                                            timeout: 1000
                                        });

                                        if (response.success) {
                                            ids.forEach(id => {
                                                $(`tr:has(input[value='${id}'])`).remove(); // X√≥a h√†ng d·ª±a v√†o checkbox
                                            });

                                            toggleDeleteSelectedButton();
                                            checkAndShowNoReviews();
                                        }
                                    },
                                    error: function () {
                                        iziToast.error({
                                            title: "L·ªói!",
                                            message: "ƒê√£ x·∫£y ra l·ªói khi x√≥a b√¨nh lu·∫≠n.",
                                            position: "topRight"
                                        });
                                    }
                                });
                            },
                            true
                        ],
                        [
                            '<button><i class="fa fa-times"></i> H·ªßy</button>',
                            function (instance, toast) {
                                instance.hide({ transitionOut: "fadeOut" }, toast, "button");
                            }
                        ]
                    ]
                });
            }

            @* // Ki·ªÉm tra n·∫øu kh√¥ng c√≤n b√¨nh lu·∫≠n, hi·ªÉn th·ªã th√¥ng b√°o
            function checkAndShowNoReviews() {
                if ($(".review-checkbox").length === 0) {
                    $(".table").remove();
                    $(".delete-selected-btn").remove();
                    if ($(".no-reviews").length === 0) {
                        $("h3").after('<div class="no-reviews">Ch∆∞a c√≥ b√¨nh lu·∫≠n n√†o.</div>');
                    }
                }
            } *@
        });

        $(document).ready(function () {
            $(".delete-review").on("click", function () {
                const id = $(this).data("id");

                iziToast.show({
                    class: "iziToast-custom",
                    title: "X√°c nh·∫≠n x√≥a",
                    message: "B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a b√¨nh lu·∫≠n n√†y?",
                    position: "center",
                    timeout: false,
                    close: false,
                    overlay: true,
                    displayMode: "once",
                    drag: false,
                    buttons: [
                        [
                            '<button><i class="fa fa-check"></i> C√≥, x√≥a</button>',
                            function (instance, toast) {
                                instance.hide({ transitionOut: "fadeOut" }, toast, "button");

                                $.post("@Url.Action("DeleteReview", "Admin")", { id: id }, function (response) {
                                    iziToast.show({
                                        title: response.success ? "Th√†nh c√¥ng!" : "L·ªói!",
                                        message: response.message,
                                        position: "topRight",
                                        color: response.success ? "green" : "red",
                                        timeout: 1000
                                    });

                                    if (response.success) {
                                        $(`tr:has(button[data-id='${id}'])`).remove(); // X√≥a h√†ng kh·ªèi b·∫£ng m√† kh√¥ng reload
                                    }
                                }).fail(() => {
                                    iziToast.error({
                                        title: "L·ªói!",
                                        message: "ƒê√£ x·∫£y ra l·ªói khi x√≥a b√¨nh lu·∫≠n.",
                                        position: "topRight"
                                    });
                                });
                            },
                            true
                        ],
                        [
                            '<button><i class="fa fa-times"></i> H·ªßy</button>',
                            function (instance, toast) {
                                instance.hide({ transitionOut: "fadeOut" }, toast, "button");
                            }
                        ]
                    ]
                });
            });
        });

        // T√¨m ki·∫øm t√†i kho·∫£n theo t√™n, sƒët ho·∫∑c email
        $("#searchInput").on("keyup", function () {
            const value = $(this).val().toLowerCase();
            $("table tbody tr").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
            });
        });
    </script>
</body>