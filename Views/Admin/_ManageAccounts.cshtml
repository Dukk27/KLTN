@model IEnumerable<KLTN.Models.Account>

<h3 class="text-center mt-3">Quản lý tài khoản</h3>

<head>
    <link rel="stylesheet" href="~/css/iziToast.css">
    <link rel="stylesheet" href="~/css/Admin/account.css">
</head>

<body>
    <div class="row mb-3 mt-3">
        <div class="col-12 col-md-4">
            <div class="input-group">
                <span class="input-group-text">
                    <i class="fas fa-search"></i>
                </span>
                <input type="text" id="searchInput" class="form-control" placeholder="Tìm kiếm tài khoản...">
            </div>
        </div>
        <div class="col-6 col-md-3 mb-2">
            <select id="roleFilter" class="form-select">
                <option value="">-- Lọc theo vai trò --</option>
                <option value="admin">Admin</option>
                <option value="chủ trọ">Chủ trọ</option>
                <option value="người tìm phòng">Người tìm phòng</option>
            </select>
        </div>
        <div class="col-6 col-md-3 mb-2">
            <select id="statusFilter" class="form-select">
                <option value="">-- Lọc theo trạng thái --</option>
                <option value="hoạt động">Hoạt động</option>
                <option value="bị khoá">Bị khoá</option>
            </select>
        </div>
        <div class="col-12 col-md-2 mb-2">
            <button id="clearFilters" class="btn btn-secondary w-100">
                <i class="fas fa-times-circle"></i> Xoá lọc
            </button>
        </div>
    </div>
    
    @{
        var adminCount = Model.Count(a => a.Role == 0);
        var chuTroCount = Model.Count(a => a.Role == 1);
        var nguoiTimPhongCount = Model.Count(a => a.Role == 2); 
        var totalAccount = adminCount + chuTroCount + nguoiTimPhongCount;
    }
    <div class="row mb-3 mt-3">
        <div class="col-md-12 d-flex justify-content-start text-center gap-custom">
            <div>
                <div class="fw-bold">Tổng tài khoản</div>
                <div class="fs-4">@totalAccount</div>
            </div>
            <div>
                <div class="fw-bold">Admin</div>
                <div class="fs-4 text-warning"><u>@adminCount</u></div>
            </div>
            <div>
                <div class="fw-bold">Chủ trọ</div>
                <div class="fs-4 text-success"><u>@chuTroCount</u></div>
            </div>
            <div>
                <div class="fw-bold">Người tìm phòng</div>
                <div class="fs-4 text-primary"><u>@nguoiTimPhongCount</u></div>
            </div>
        </div>
    </div>

    <div class="table-responsive">
        <table class="table table-bordered table-hover">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Tên người dùng</th>
                    <th>Số điện thoại</th>
                    <th>Email</th>
                    <th>Vai trò</th>
                    <th>Trạng thái</th>
                    <th>Hành động</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var account in Model)
                {
                    <tr data-role="@(
                        account.Role == 0 ? "admin" : 
                        account.Role == 1 ? "chủ trọ" : 
                        "người tìm phòng")"
                        data-status="@(account.IsLocked ? "bị khoá" : "hoạt động")">
                        <td>@account.IdUser</td>
                        <td>@account.UserName</td>
                        <td>@account.PhoneNumber</td>
                        <td>@account.Email</td>
                        <td>
                            @switch (account.Role)
                            {
                                case 0:
                                    @:Admin
                                    break;
                                case 1:
                                    @:Chủ trọ
                                    break;
                                default:
                                    @:Người tìm phòng
                                    break;
                            }
                        </td>
                        <td>
                            @if (account.IsLocked)
                            {
                                <span class="badge bg-danger">Bị khoá</span>
                            }
                            else
                            {
                                <span class="badge bg-success">Hoạt động</span>
                            }
                        </td>
                        <td>
                            @* <a href="@Url.Action("Details", "Admin", new { id = account.IdUser })" class="btn btn-sm btn-primary"
                                title="Xem chi tiết tài khoản">
                                <i class="fas fa-eye"></i>
                            </a> *@

                            @if (account.IsLocked)
                            {
                                <button class="btn btn-sm btn-success unlock-account" data-id="@account.IdUser"
                                    title="Mở khoá tài khoản">
                                    <i class="fas fa-unlock"></i>
                                </button>
                            }
                            else
                            {
                                <button class="btn btn-sm btn-warning lock-account" data-id="@account.IdUser" title="Khoá tài khoản">
                                    <i class="fas fa-lock"></i>
                                </button>
                            }
                            
                            @* <button class="btn btn-sm btn-danger delete-account" data-id="@account.IdUser" title="Xoá tài khoản">
                                <i class="fas fa-trash-alt"></i>
                            </button> *@

                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center mt-3" id="pagination"></ul>
        </nav>
    </div>
    <!-- Thêm thư viện iziToast -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/izitoast/1.4.0/js/iziToast.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/izitoast/1.4.0/css/iziToast.min.css" />

    <script>
        $(document).ready(function () {
            function bindEvents() {
                // Xử lý khoá tài khoản
                $(".lock-account").off("click").on("click", function () {
                    const id = $(this).data("id");
                    const button = $(this);

                    iziToast.question({
                        class: 'iziToast-custom',
                        title: "Xác nhận khoá tài khoản",
                        message: "Bạn có chắc chắn muốn khoá tài khoản này không?",
                        position: "center",
                        timeout: false,
                        close: false,
                        overlay: true,
                        buttons: [
                            ['<button><i class="fa fa-lock"></i> Khoá</button>', function (instance, toast) {
                                instance.hide({ transitionOut: 'fadeOut' }, toast, 'button');

                                $.post("@Url.Action("LockAccount", "Admin")", { id: id }, function (response) {
                                    if (response.success) {
                                        iziToast.success({
                                            title: "Thành công!",
                                            message: "Tài khoản đã bị khoá.",
                                            position: "topRight",
                                            timeout: 1000
                                        });

                                        // Chuyển nút "Khoá" thành "Mở khoá"
                                        button.removeClass("btn-warning lock-account").addClass("btn-success unlock-account")
                                            .html('<i class="fas fa-unlock"></i>')
                                            .attr("title", "Mở khoá tài khoản");

                                        // Cập nhật trạng thái hiển thị
                                        button.closest("tr").find("td:nth-child(6)").html('<span class="badge bg-danger">Bị khoá</span>');

                                        // Gán lại sự kiện
                                        bindEvents();
                                    }
                                });
                            }, true],
                            ['<button><i class="fa fa-times"></i> Hủy</button>', function (instance, toast) {
                                instance.hide({ transitionOut: 'fadeOut' }, toast, 'button');
                            }]
                        ]
                    });
                });

                // Xử lý mở khoá tài khoản
                $(".unlock-account").off("click").on("click", function () {
                    const id = $(this).data("id");
                    const button = $(this);

                    iziToast.question({
                        class: 'iziToast-custom',
                        title: "Xác nhận mở khoá",
                        message: "Bạn có chắc chắn muốn mở khoá tài khoản này không?",
                        position: "center",
                        timeout: false,
                        close: false,
                        overlay: true,
                        buttons: [
                            ['<button><i class="fa fa-unlock"></i> Mở khoá</button>', function (instance, toast) {
                                instance.hide({ transitionOut: 'fadeOut' }, toast, 'button');

                                $.post("@Url.Action("UnlockAccount", "Admin")", { id: id }, function (response) {
                                    if (response.success) {
                                        iziToast.success({
                                            title: "Thành công!",
                                            message: "Tài khoản đã được mở khoá.",
                                            position: "topRight",
                                            timeout: 1000
                                        });

                                        // Chuyển nút "Mở khoá" thành "Khoá"
                                        button.removeClass("btn-success unlock-account").addClass("btn-warning lock-account")
                                            .html('<i class="fas fa-lock"></i>')
                                            .attr("title", "Khoá tài khoản");

                                        // Cập nhật trạng thái hiển thị
                                        button.closest("tr").find("td:nth-child(6)").html('<span class="badge bg-success">Hoạt động</span>');

                                        // Gán lại sự kiện
                                        bindEvents();
                                    }
                                });
                            }, true],
                            ['<button><i class="fa fa-times"></i> Hủy</button>', function (instance, toast) {
                                instance.hide({ transitionOut: 'fadeOut' }, toast, 'button');
                            }]
                        ]
                    });
                });
            }
            // Gán sự kiện lần đầu
            bindEvents();
        });

        // Tìm kiếm tài khoản theo tên, sđt hoặc email
        $("#searchInput").on("keyup", function () {
            const value = $(this).val().toLowerCase();
            $("table tbody tr").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
            });
        });

        // Hàm lọc tài khoản theo tên, sđt, email, vai trò và trạng thái
        function filterAccounts() {
            const keyword = $("#searchInput").val().toLowerCase();
            const role = $("#roleFilter").val();
            const status = $("#statusFilter").val();

            $("table tbody tr").each(function () {
                const rowText = $(this).text().toLowerCase();
                const rowRole = $(this).data("role");
                const rowStatus = $(this).data("status");

                const matchesKeyword = rowText.indexOf(keyword) > -1;
                const matchesRole = role === "" || rowRole === role;
                const matchesStatus = status === "" || rowStatus === status;

                $(this).toggle(matchesKeyword && matchesRole && matchesStatus);
            });

            reapplyPagination();
        }

        // Gắn sự kiện khi thay đổi bộ lọc
        $("#searchInput, #roleFilter, #statusFilter").on("input change", function () {
            filterAccounts();
        });

        // Hàm phân trang
        function paginateTable(rowsPerPage) {
            const rows = $("table tbody tr:visible");
            const totalRows = rows.length;
            const totalPages = Math.ceil(totalRows / rowsPerPage);

            $("#pagination").empty();

            for (let i = 1; i <= totalPages; i++) {
                $("#pagination").append(`
                    <li class="page-item${i === 1 ? " active" : ""}">
                        <a class="page-link" href="#">${i}</a>
                    </li>
                `);
            }

            rows.hide();
            rows.slice(0, rowsPerPage).show();

            $("#pagination .page-link").on("click", function (e) {
                e.preventDefault();
                const page = parseInt($(this).text());

                $("#pagination .page-item").removeClass("active");
                $(this).parent().addClass("active");

                const start = (page - 1) * rowsPerPage;
                const end = start + rowsPerPage;

                rows.hide().slice(start, end).show();
            });
        }

        // Hàm áp dụng lại phân trang sau khi thay đổi bộ lọc
        function reapplyPagination() {
            paginateTable(10); // số dòng mỗi trang
        }

        reapplyPagination();

        // Xử lý nút "Xoá lọc"
        $("#clearFilters").on("click", function () {
            $("#searchInput").val("");
            $("#roleFilter").val("");
            $("#statusFilter").val("");
            filterAccounts(); // áp dụng lại bộ lọc để hiển thị tất cả
        });
    </script>
</body>