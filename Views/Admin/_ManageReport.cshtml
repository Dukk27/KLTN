@model IEnumerable<KLTN.Models.Report>

<head>
    <link rel="stylesheet" href="~/css/iziToast.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/izitoast/dist/css/iziToast.min.css" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/izitoast/dist/js/iziToast.min.js"></script>

    <style>
        th, td {
            text-align: center;
            padding: 10px;
            border: 1px solid #ddd;
            word-wrap: break-word; /* Đảm bảo chữ không bị tràn ra ngoài */
        }

        td:last-child {
            display: flex;
            gap: 5px;
            justify-content: center;
            flex-wrap: wrap;
        }

        .house-link {
            text-decoration: none;
            color: #007bff; /* Thay đổi màu sắc của liên kết */
            font-weight: bold; /* Đậm văn bản */
        }

        .house-link:hover {
            color: #0056b3; /* Thay đổi màu khi hover */
        }
    </style>
</head>

<body>
    <h3 class="text-center mt-3">Danh sách báo cáo bài đăng</h3>

    <div class="row mb-3 mt-3">
        <div class="col-12 col-md-4">
            <div class="input-group">
                <span class="input-group-text">
                    <i class="fas fa-search"></i>
                </span>
                <input type="text" id="searchInput" class="form-control" placeholder="Tìm kiếm báo xấu...">
            </div>
        </div>
        <div class="col-6 col-md-3 mb-2">
            <input type="date" id="dateFilter" class="form-control">
        </div>
        <div class="col-6 col-md-3 mb-2">
            <select id="reporterFilter" class="form-control">
                <option value="">-- Lọc theo người báo cáo --</option>
                @foreach (var reporter in Model.Select(r => r.User?.UserName).Distinct())
                {
                    <option value="@reporter">@reporter</option>
                }
            </select>
        </div>
    </div>

    <table class="table table-bordered table-hover">
        <thead>
            <tr>
                <th>ID</th>
                <th>Tiêu đề bài đăng</th>
                <th>Người báo cáo</th>
                <th>Lý do</th>
                <th>Ngày báo cáo</th>
                <th>Trạng thái</th>
                <th>Hành động</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr id="row-@item.Id">
                    <td>@item.Id</td>
                    <td>
                        <a href="@Url.Action("Detail", "Home", new { id = item.HouseId })" class="house-link">
                            @item.House?.NameHouse
                        </a>
                    </td>
                    <td>@item.User?.UserName</td>
                    <td>@item.Reason</td>
                    <td>@item.CreatedAt.ToString("dd/MM/yyyy HH:mm")</td>
                    <td class="status">
                        @if (item.IsApproved)
                        {
                            <span class="badge bg-success">Đã duyệt</span>
                        }
                        else
                        {
                            <span class="badge bg-warning text-dark">Chưa duyệt</span>
                        }
                    </td>
                    <td>
                        @if (!item.IsApproved)
                        {
                            <button class="btn btn-sm btn-success approve-btn" data-id="@item.Id">
                                <i class="fas fa-check"></i> Duyệt
                            </button>
                            <button class="btn btn-sm btn-danger reject-btn" data-id="@item.Id">
                                <i class="fas fa-times"></i> Từ chối
                            </button>
                        }
                        else
                        {
                            <em>Không khả dụng</em>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <script>
        $(document).ready(function () {
            $('.approve-btn').click(function () {
                const id = $(this).data('id');

                $.post('@Url.Action("DuyetBaoCao", "Admin")', { id: id }, function (res) {
                    if (res.success) {
                        iziToast.success({ title: 'Thành công', message: 'Báo cáo đã được duyệt.', position: 'topRight' });

                        const row = $(`#row-${id}`);
                        row.find('.status').html('<span class="badge bg-success">Đã duyệt</span>');
                        row.find('td:last-child').html('<em>Không khả dụng</em>');
                    } else {
                        iziToast.error({ title: 'Lỗi', message: res.message, position: 'topRight' });
                    }
                }).fail(() => {
                    iziToast.error({ title: 'Lỗi', message: 'Không thể kết nối đến máy chủ.', position: 'topRight' });
                });
            });

            $('.reject-btn').click(function () {
                const id = $(this).data('id');

                $.post('@Url.Action("TuChoiBaoCao", "Admin")', { id: id }, function (res) {
                    if (res.success) {
                        iziToast.success({ title: 'Thành công', message: 'Đã từ chối và xóa báo cáo.', position: 'topRight' });

                        $(`#row-${id}`).fadeOut(300, function () { $(this).remove(); });
                    } else {
                        iziToast.error({ title: 'Lỗi', message: res.message, position: 'topRight' });
                    }
                }).fail(() => {
                    iziToast.error({ title: 'Lỗi', message: 'Không thể kết nối đến máy chủ.', position: 'topRight' });
                });
            });

            // Tìm kiếm 
            $("#searchInput").on("keyup", function () {
                const value = $(this).val().toLowerCase();
                $("table tbody tr").filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
                });
            });

            // Lọc theo người báo cáo
            $("#reporterFilter").on("change", function () {
                const selectedReporter = $(this).val();
                filterReports($("#searchInput").val(), $("#dateFilter").val(), selectedReporter);
            });

            // Lọc theo ngày
            $("#dateFilter").on("change", function () {
                const selectedDate = $(this).val();
                filterReports($("#searchInput").val(), selectedDate, $("#reporterFilter").val());
            });

            // Hàm lọc báo cáo
            function filterReports(searchText, selectedDate, selectedReporter) {
                $("table tbody tr").each(function () {
                    const reportText = $(this).text().toLowerCase();
                    const reportDate = $(this).find("td:eq(4)").text().trim(); // Ngày ở cột thứ 5 (index 4)
                    const reporterName = $(this).find("td:eq(2)").text().trim(); // Người báo cáo ở cột thứ 3 (index 2)

                    // Chuyển đổi ngày trong bảng về định dạng yyyy-MM-dd
                    const formattedReportDate = formatDateForComparison(reportDate);

                    // Kiểm tra điều kiện lọc
                    const matchesSearch = searchText === "" || reportText.indexOf(searchText.toLowerCase()) > -1;
                    const matchesDate = selectedDate === "" || formattedReportDate === selectedDate;
                    const matchesReporter = selectedReporter === "" || reporterName === selectedReporter;

                    // Ẩn hoặc hiển thị dòng
                    if (matchesSearch && matchesDate && matchesReporter) {
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                });
            }

            // Hàm chuyển đổi ngày từ định dạng dd/MM/yyyy sang yyyy-MM-dd
            function formatDateForComparison(reportDate) {
                const parts = reportDate.split(" ")[0].split("/"); // Lấy ngày (dd/MM/yyyy)
                const day = parts[0];
                const month = parts[1];
                const year = parts[2];
                return `${year}-${month}-${day}`;
            }
        });
    </script>
</body>