@model IEnumerable<KLTN.Models.HouseType>

<head>
    <link rel="stylesheet" href="~/css/iziToast.css">
    <link rel="stylesheet" href="~/css/Admin/responsive.css">
    <link rel="stylesheet" href="~/css/Admin/review.css">
</head>

<body>
    <h3 class="text-center mt-3">Qu·∫£n l√Ω danh m·ª•c lo·∫°i nh√†</h3>
    
    <div class="row mb-3">
        <div class="col-12 col-md-6 d-flex">
            <!-- √î t√¨m ki·∫øm -->
            <input type="text" id="searchInput" class="form-control" placeholder="üîç T√¨m ki·∫øm lo·∫°i nh√†...">
        </div>
        <div class="col-12 col-md-6 d-flex justify-content-end">
            <button class="btn btn-primary mt-3" onclick="openCreateModal()">
                <i class="fa fa-plus-circle"></i> Th√™m m·ªõi
            </button>
        </div>
    </div>

    <table class="table table-bordered table-hover">
        <thead>
            <tr>
                <th>ID</th>
                <th>T√™n Lo·∫°i Nh√†</th>
                <th>H√†nh ƒê·ªông</th>
            </tr>
        </thead>
        <tbody id="houseTypeTableBody">
            @{
                int index = 1;
            }
            @foreach (var houseType in Model)
            {
                <tr id="row_@houseType.IdHouseType">
                    <td>@index</td>
                    <td>@houseType.Name</td>
                    <td>
                        <button class="btn btn-warning btn-sm"
                            onclick="openEditModal(@houseType.IdHouseType, '@houseType.Name')" title="Ch·ªânh s·ª≠a lo·∫°i nh√†"><i
                                class="fas fa-edit"></i>
                        </button>
                        <button class="btn btn-danger btn-sm" onclick="deleteHouseType(@houseType.IdHouseType)"
                            title="Xo√° lo·∫°i nh√†"><i class="fas fa-trash-alt"></i> </button>
                    </td>
                </tr>
                index++;
            }
        </tbody>
    </table>

    <!-- Modal ƒë·ªÉ th√™m/s·ª≠a lo·∫°i nh√† -->
    <div id="houseTypeModal" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 id="modalTitle">Th√™m Lo·∫°i Nh√†</h5>
                    <button type="button" class="close" onclick="closeModal()">&times;</button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="houseTypeId">
                    <label>T√™n lo·∫°i nh√†:</label>
                    <input type="text" id="houseTypeName" class="form-control">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-success" onclick="saveHouseType()">L∆∞u</button>
                    <button type="button" class="btn btn-secondary" onclick="closeModal()">H·ªßy</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Th√™m th∆∞ vi·ªán iziToast -->
    <script src="https://cdn.jsdelivr.net/npm/izitoast/dist/js/iziToast.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/izitoast/dist/css/iziToast.min.css">

    <script>
        function openCreateModal() {
            document.getElementById("modalTitle").textContent = "Th√™m Lo·∫°i Nh√†";
            document.getElementById("houseTypeId").value = '';
            document.getElementById("houseTypeName").value = '';
            document.getElementById("houseTypeModal").classList.add("show");
            document.getElementById("houseTypeModal").style.display = "block";
        }

        function openEditModal(id, name) {
            document.getElementById("modalTitle").textContent = "S·ª≠a Lo·∫°i Nh√†";
            document.getElementById("houseTypeId").value = id;
            document.getElementById("houseTypeName").value = name;
            document.getElementById("houseTypeModal").classList.add("show");
            document.getElementById("houseTypeModal").style.display = "block";
        }

        function closeModal() {
            document.getElementById("houseTypeModal").classList.remove("show");
            document.getElementById("houseTypeModal").style.display = "none";
        }

        function saveHouseType() {
            let id = document.getElementById("houseTypeId").value;
            let name = document.getElementById("houseTypeName").value.trim();

            if (!name) {
                iziToast.warning({
                    title: "L·ªói!",
                    message: "T√™n lo·∫°i nh√† kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng.",
                    position: "topRight",
                    timeout: 3000
                });
                return;
            }

            let url = id ? "/Admin/EditHouseType" : "/Admin/CreateHouseType";
            let data = JSON.stringify({ IdHouseType: id ? parseInt(id) : 0, Name: name });

            fetch(url, {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: data
            })
                .then(response => response.json())
                .then(response => {
                    iziToast.show({
                        title: response.success ? "Th√†nh c√¥ng!" : "L·ªói!",
                        message: response.message,
                        position: "topRight",
                        timeout: 1000,
                        color: response.success ? "green" : "red"
                    });

                    if (response.success) {
                        closeModal();
                        updateHouseTypeTable();
                    }
                })
                .catch(() => {
                    iziToast.error({
                        title: "L·ªói!",
                        message: "C√≥ l·ªói x·∫£y ra, vui l√≤ng th·ª≠ l·∫°i.",
                        position: "topRight",
                        timeout: 1000
                    });
                });
        }

        function deleteHouseType(id) {
            iziToast.show({
                class: "iziToast-custom",
                title: "X√°c nh·∫≠n x√≥a",
                message: "B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a? H√†nh ƒë·ªông n√†y kh√¥ng th·ªÉ ho√†n t√°c!",
                position: "center",
                timeout: false,
                close: false,
                overlay: true, 
                displayMode: "once",
                drag: false,
                icon: "fa fa-question-circle",
                buttons: [
                    [
                        '<button><i class="fa fa-check"></i> C√≥, x√≥a</button>',
                        function (instance, toast) {
                            instance.hide({ transitionOut: "fadeOut" }, toast, "button");

                            fetch("/Admin/DeleteHouseType", {
                                method: "POST",
                                headers: { "Content-Type": "application/x-www-form-urlencoded" },
                                body: new URLSearchParams({ id: id })
                            })
                                .then(response => response.json())
                                .then(response => {
                                    iziToast.show({
                                        title: response.success ? "ƒê√£ x√≥a!" : "L·ªói!",
                                        message: response.message,
                                        position: "topRight",
                                        timeout: 1000,
                                        color: response.success ? "green" : "red"
                                    });

                                    if (response.success) {
                                        let row = document.getElementById("row_" + id);
                                        if (row) row.remove();
                                        updateHouseTypeTable();
                                    }
                                });
                        },
                        true
                    ],
                    [
                        '<button><i class="fa fa-times"></i> H·ªßy</button>',
                        function (instance, toast) {
                            instance.hide({ transitionOut: "fadeOut" }, toast, "button");
                        }
                    ]
                ]
            });
        }

        function updateHouseTypeTable() {
            fetch("/Admin/ManageHouseType")
                .then(response => response.text())
                .then(data => {
                    let parser = new DOMParser();
                    let doc = parser.parseFromString(data, "text/html");
                    let newTableBody = doc.querySelector("#houseTypeTableBody").innerHTML;
                    document.getElementById("houseTypeTableBody").innerHTML = newTableBody;

                    let rows = document.querySelectorAll("#houseTypeTableBody tr");
                    rows.forEach((row, index) => {
                        let firstCell = row.querySelector("td:first-child");
                        if (firstCell) {
                            firstCell.textContent = index + 1;
                        }
                    });
                }
            );
        }

        // T√¨m ki·∫øm 
        $("#searchInput").on("keyup", function () {
            const value = $(this).val().toLowerCase();
            $("table tbody tr").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
            });
        });
    </script>
</body>